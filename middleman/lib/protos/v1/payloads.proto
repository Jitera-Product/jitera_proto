syntax = "proto3";
package schema.v1;

import "google/protobuf/struct.proto";

message Project {
	string id = 1;
	string project_name = 2;
	int32 project_id = 3;
	optional Infra infra = 4;
	string time_zone = 5;
	string default_language_code = 6;
	repeated string language_codes = 7;
	repeated Credential credentials = 12;

	oneof generate_type {
		ProjectExport project_export = 9;
		ProjectPreview project_preview = 10;
		CodePreview code_preview = 11;
	}

	message Credential {
		Environment name = 1;
		string value = 2;
	}

	enum Environment {
		DEVELOPMENT = 0;
		STAGING = 1;
		PRODUCTION = 2;
	}
}

message CodePreview {
	int32 id = 1;
	optional Backend backend = 2;
	optional WebApp web_app = 3;
}

message ProjectExport {
	int32 id = 1;
}

message ProjectPreview {
	int32 id = 1;
}

message Infra {
	string path = 1;
}

message Backend {
	repeated Table tables = 4;
	repeated Controller controllers = 5;
	repeated Feature features = 6;
	repeated Authorization authorizations = 7;
	repeated Localization localizations = 8;
	repeated Migration migrations = 9;
}

message Localization {
	string lang = 1;
	repeated Namespace namespaces = 3;

	message Namespace {
		string name = 1;
		repeated Translate translates = 2;
	}

	message Translate {
		string key = 1;
		string value = 2;
	}
}

enum DataTypeName {
	BOOLEAN = 0;
	INTEGER = 1;
	FLOAT = 2;
	STRING = 3;
	TEXT = 4;
	DATE = 5;
	DATETIME = 6;
	ARRAY = 7;
	OBJECT = 8;
	PAGE_SIZE = 9;
	PAGE_NUMBER = 10;
	FILE = 11;
	TABLE = 12;
	ENUM = 13;
	CURRENT_USER=14;
	COUNTER_CACHE = 15;
	ID = 16;
}

message DataType {
	DataTypeName name = 1;
}

enum Operator {
	WHERE = 0;
	PAGINATION = 1;
	ORDER = 2;

	ORDER_ASC = 3;
	ORDER_DESC = 4;

	JOIN_AND = 5;
	JOIN_OR = 6;

	EQUAL = 7;
	START_WITH = 8;
	END_WITH = 9;
	CONTAIN = 10;
	NOT_EQUAL = 11;
	GREATER_THAN = 12;
	LESS_THAN = 13;
	GREATER_OR_EQUAL_THAN = 14;
	LESS_OR_EQUAL_THAN = 15;

	WHERE_AND = 16;
	WHERE_OR = 17;
}

message Authorization {
	string name = 1;
	int32 id = 2;
	repeated Policy policies = 3;

	message Policy {
		string resource = 3;
		RoleBinding role_binding = 4;
		Rule rule = 5;
		Scope scope = 6;

		message RoleBinding {
			string table = 1;
			string column = 2;
			string role = 3;
		}

		enum Scope {
			ALL = 0;
			ASSOCIATED = 1;
		}

		message Rule {
			repeated Operand operands = 1;
			repeated Operator operators = 2;

			message Operand {
				oneof operand {
					Expr expr = 1;
					Rule rule = 2;
				}
			}

			message Expr {
				string column = 1;
				oneof map_to {
					string value = 2;
					string paths = 3;
				}
				DataType data_type = 4;
				Operator operator = 5;
			}
		}
	}
}

message Feature {
	FeatureName name = 1;
	Environment env = 2;
	oneof types {
		EmailLogin email_login = 3;
		JPBankData jp_bank_data = 4;
		BasicAuth basic_auth = 5;
		TwilioLogin twilio_login = 6;
		Rollbar rollbar = 7;
		DeepLink deep_link = 8;
		Stripe stripe = 9;
		LineLogin line_login = 10;
		GoogleAnalytics google_analytics = 11;
		ScoutApm scout_apm = 12;
		GoogleTagManager google_tag_manager = 13;
		EmailConfig email_config = 14;
	}

	message ScoutApm {
		string key_id = 1;
	}

	message EmailConfig {
		string address = 1;
		string username = 2;
		string password = 3;
		string default_from_email = 4;
		EmailServiceProvider service_provider = 5;
		string port = 6;
		EmailConfigAuthentication authentication = 7;
	}

	enum EmailConfigAuthentication {
		PLAIN = 0;
		LOGIN = 1;
		CRAM_MD5 = 2;
	}

	enum EmailServiceProvider {
		AWS_SES = 0;
		SENDGRID = 1;
		GMAIL = 2;
		MAILTRAP = 3;
		GENERIC_SMTP = 4;
	}

	message EmailLogin {
		repeated string tables = 1;
		int32 password_min_length = 2;
		int32 remember_for = 3;
		int32 reset_password_within = 4;
		int32 maximum_retries = 5;
		UnlockStrategy unlock_strategy = 6;
		int32 unlock_in = 7;
		string password_regex = 8;
		bool confirmation_email = 9;

		enum UnlockStrategy {
			TIME = 0;
			EMAIL = 1;
			BOTH = 2;
		}
	}

	message JPBankData { }

	message BasicAuth {
		string username = 1;
		string password = 2;
	}

	message TwilioLogin {
		repeated string user_tables = 1;
		string service_id = 2;
		string sid = 3;
		string token = 4;
		int32 otp_length = 5;
	}

	message Rollbar {
		string access_token = 1;
	}

	message DeepLink {
		string ios_app_store_id = 1;
		string ios_bundle_id = 2;
		string ios_app_link = 3;
		string android_package_name = 4;
		string android_cert_fingerprints = 5;
		string android_app_link = 6;
		string firebase_domain = 7;
	}

	message Stripe {
		repeated string subscription_tables = 1;
		repeated string user_tables = 2;
		string public_key = 3;
		string secret_key = 4;
		string stripe_endpoint_secret = 5;
		string http_stripe_signature = 6;
		bool add_stripe_subscription = 7;
		bool add_charge_api = 8;
		bool add_intent_api = 9;
	}

	message LineLogin {
		repeated string user_tables = 1;
		string client_id = 2;
		string secret_key = 3;
	}

	message GoogleAnalytics {
		string measurement_id = 1;
	}

	message GoogleTagManager {
		string container_id = 1;
	}

	enum FeatureName {
		NIL = 0;
		EMAIL_LOGIN = 1;
		JP_BANKS_DATA = 2;
		BASIC_AUTH = 3;
		TWILIO_LOGIN = 4;
		ROLLBAR = 5;
		DEEP_LINK = 6;
		STRIPE = 7;
		LINE_LOGIN = 8;
		GOOGLE_ANALYTICS = 9;
		SCOUT_APM = 10;
		GOOGLE_TAG_MANAGER = 11;
		EMAIL_CONFIG = 12;
	}

	enum Environment {
		DEVELOPMENT = 0;
		STAGING = 1;
		PRODUCTION = 2;
		ALL = 3;
	}
}

message Controller {
	string name = 1;
	repeated Endpoint endpoints = 2;

	message Endpoint {
		string path = 1;
		string name = 2;
		oneof resource {
			string table = 3;
			Feature.FeatureName feature = 4;
		}
		oneof methods {
			List list = 5;
			Get get = 6;
			Create create = 7;
			Update update = 8;
			Delete delete = 9;
		}
		Authentication authentication = 10;
		Authorization authorization = 11;
		Response responses = 12;
		RequestContent params = 13;
		bool writable = 14;
		optional string feature_action = 15;
		optional string feature_table = 16;
		repeated AuthorizationGroup authorization_groups = 17;
		bool restrict_access = 18;

		message List {
			RequestContent queries = 1;
			ResourceCondition conditions = 2;
		}

		message Get {
			RequestContent queries = 1;
			ResourceCondition conditions = 2;
		}

		message Create {
			RequestContent body = 1;
			ResourceCondition conditions = 2;
			ResourceUpdate resources = 3;
		}

		message Update {
			RequestContent body = 1;
			ResourceCondition conditions = 2;
			ResourceUpdate resources = 3;
		}

		message Delete {
			RequestContent body = 1;
			ResourceCondition conditions = 2;
		}
	}

	message RequestContent {
		repeated Field fields = 1;

		message Field {
			string name = 1;
			DataType data_type = 2;
			repeated Field children = 3;
		}
	}

	message Response {
		repeated Field fields = 1;

		message Field {
			string name = 1;
			oneof map_to {
				string resource = 2;
				string property = 3;
				string value = 4;
			}
			DataType data_type = 5;
			repeated Field children = 6;
			string category = 7;
		}
	}

	message ResourceCondition {
		repeated Operand operands = 1;
		repeated Operator operators = 2;

		message Operand {
			oneof operand {
				Expr expr = 1;
				ResourceCondition condition = 2;
			}
		}

		message Expr {
			repeated string paths = 1;
			oneof map_to {
				string query = 2;
				string params = 3;
				string body = 4;
				string value = 5;
				System system = 7;
			}
			DataType data_type = 8;
			Operator operator = 9;
		}

		enum System {
			RESOURCE_OWNER = 0;
		}
	}

	message ResourceUpdate {
		repeated Field fields = 1;

		message Field {
			string name = 1;
			oneof map_to {
				string query = 2;
				string params = 3;
				string body = 4;
				string value = 5;
			}
			DataType data_type = 6;
			repeated Field children = 7;
		}
	}

	message Authentication {
		string table_name = 1;
	}

	message Authorization {
		int32 authorization_id = 1;
		string table_name = 2;
	}

	message AuthorizationGroup {
		string table_name = 1;
		repeated AuthorizationCondition authorization_conditions = 2;
		bool authentication_model = 3;
	}

	message AuthorizationCondition {
		string column_definition_name = 1;
		string column_definition_display_name = 2;
		JoiningCondition joining_condition = 3;
		Query query = 4;
		string default_value = 5;
		string authentication_class = 6;

		enum Query {
			EQUAL = 0;
			IS_NOT_EQUAL = 1;
			GREATER_THAN = 2;
			LESS_THAN = 3;
			GREATER_THAN_OR_EQUAL_TO = 4;
			LESS_THAN_OR_EQUAL_TO = 5;
		}

		enum JoiningCondition {
			AND_JOIN = 0;
			OR_JOIN = 1;
		}
	}
}

message Table {
	string name = 1;
	repeated Column columns = 2;
	repeated Relation relations = 3;
	repeated Index indexes = 4;

	message Column {
		string name = 1;
		ColumnType type = 2;
		repeated Constraint constraints = 3;
		optional bool hidden = 4;
		optional ColumnValidation column_validation = 5;

		message ColumnType {
			oneof types {
				IntegerType integer_type = 1;
				StringType string_type = 2;
				FloatType float_type = 3;
				BooleanType boolean_type = 4;
				DateType date_type = 5;
				FileType file_type = 6;
				EnumType enum_type = 7;
				CounterCacheType counter_cache_type = 8;
				IDType id_type = 9;
			}
		}

		message IDType {
		}

		message CounterCacheType {
			string table_name = 1;
		}

		message StringType {
			optional string default_value = 1;
			bool is_text = 2;
			repeated Format formats = 3;
			repeated Condition conditions = 4;

			enum Format {
				EMAIL = 0;
				HIRAGANA = 1;
				KATAKANA = 2;
				PHONE_NUMBER = 3;
				URL = 4;
			}

			message Condition {
				Operator operator = 1;
				oneof operand {
					int32 value = 2;
					string column_name = 3;
				}
			}
		}

		message IntegerType {
			optional int32 default_value = 1;
			repeated Condition conditions = 2;

			message Condition {
				Operator operator = 1;
				oneof operand {
					int32 value = 2;
					string column_name = 3;
				}
			}
		}

		enum Operator {
			GREATER_THAN = 0;
			GREATER_THAN_OR_EQUAL = 1;
			EQUAL = 2;
			LESS_THAN = 3;
			LESS_THAN_OR_EQUAL = 4;
			NOT_EQUAL = 5;
		}

		message FloatType {
			optional float default_value = 1;
			repeated Condition conditions = 2;

			message Condition {
				Operator operator = 1;
				oneof operand {
					float value = 2;
					string column_name = 3;
				}
			}
		}

		message BooleanType {
			bool default_value = 1;
		}

		message DateType {
			bool with_time = 1;
			repeated Condition conditions = 2;

			enum Condition {
				IN_PAST = 0;
				IN_FUTURE = 1;
			}
		}

		message FileType {
			int32 maximum_size = 1;
			NumberOfFiles number_of_files = 2;
			repeated ContentType content_types = 3;
			bool multiple = 4;


			enum ContentType {
				IMAGE = 0;
				VIDEO = 1;
				AUDIO = 2;
				CSV = 3;
				PDF = 4;
				JSON = 5;
			}

			message NumberOfFiles {
				int32 minimum = 1;
				int32 maximum = 2;
			}
		}

		 message EnumType {
			string default_value = 1;
			repeated string values = 2;
		 }
	}

	message ColumnValidation {
		repeated ColumnValidationOption column_validation_options = 1;
		bool presence = 2;
		bool uniqueness = 3;
		bool allow_nil = 4;
	}

	message ColumnValidationOption {
		oneof validation_type {
			LengthValidation length_validation = 1;
			CharValidation char_validation = 2;
			DateValidation  date_validation = 3;
			DateValidation date_time_validation = 4;
			NumericalityValidation numericality_validation = 5;
			FileValidation file_validation = 6;
		}
		message LengthValidation {
			int32 maximum = 1;
			int32 minimum = 2;
			int32 is = 3;
		}
		message CharValidation {
			bool email = 1;
			bool hiragana = 2;
			bool katakana = 3;
			bool phone_number = 4;
			bool url = 5;
		}
		message DateValidation {
			bool past = 1;
			bool future = 2;
		}
		message NumericalityValidation {
			float greater_than = 1;
			float greater_than_or_equal_to = 2;
			float less_than = 3;
			float less_than_or_equal_to = 4;
		}

		message FileValidation {
			bool single = 1;
			repeated string content_types = 2;
		}
	}

	message Constraint {
		oneof relation_key {
			PrimaryKey primary_key = 1;
			ForeignKey foreign_key = 2;
			NotNull not_null = 3;
			Unique unique = 4;
		}

		message PrimaryKey {
		}

		message ForeignKey {
			string table_name = 1;
			string primary_key = 2;
		}

		message NotNull {
		}

		message Unique {
		}
	}

	message Index {
		string name = 1;
		bool unique = 2;
		repeated string columns = 3;
	}

	message Relation {
		oneof relation_type {
			RelationHasOne has_one = 1;
			RelationBelongTo belong_to = 2;
			RelationOneMany one_many = 3;
			RelationManyOne many_one = 4;
			RelationManyMany many_many = 5;
		}

		message RelationHasOne {
			string table_name = 1;
			string column_name = 2;
		}

		message RelationBelongTo {
			string table_name = 1;
			string column_name = 2;
		}

		message RelationManyOne {
			string table_name = 1;
			string column_name = 2;
		}

		message RelationOneMany {
			string table_name = 1;
			string column_name = 2;
		}

		message RelationManyMany {
			string table_name = 1;
			string joined_name = 2;
		}
	}
}

message Migration {
	string migration_id = 1;
	repeated MigrationChange changes = 2;
}

message MigrationChange {
	oneof methods {
		CreateTable create_table  = 1;
		ChangeTableName change_table_name = 2;
		ChangeTableComment change_table_comment = 3;
		AddColumn add_column = 4;
		RenameColumn rename_column = 5;
		ChangeColumnComment change_column_comment = 6;
		ChangeColumn change_column = 7;
		ChangeColumnDefault change_column_default = 8;
		ChangeColumnNull change_column_null = 9;
		RemoveTableIndex remove_table_index = 10;
		RemoveTableRelation remove_table_relation = 11;
		CreateTableRelation create_table_relation = 12;
		RemoveColumn remove_column = 13;
		DropTable drop_table = 14;
		ChangeTableIndex change_table_index = 15;
		CreateTableIndex create_table_index = 16;
		AddUniqColumn add_uniq_column = 17;
		ChangeColumnUnique change_column_unique = 18;
	}
}

message CreateTable {
	string key = 1;
	CreateTableChange change_to = 2;
	string prev_uuid = 3;
	string next_uuid = 4;
	CreateTableNextRecord next_record = 5;
}

message ChangeTableName {
	string key = 1;
	string change_from = 2;
	string change_to = 3;
	string prev_uuid = 4;
	string next_uuid = 5;
	CreateTableNextRecord prev_record = 6;
	CreateTableNextRecord next_record = 7;
}

message ChangeTableComment {
	string key = 1;
	string change_from = 2;
	string change_to = 3;
	string prev_uuid = 4;
	string next_uuid = 5;
	CreateTableNextRecord prev_record = 6;
	CreateTableNextRecord next_record = 7;
}

message CreateTableChange {
	string name = 1;
	string uuid = 2;
	optional string comment = 3;
}

message AddColumn {
	string key = 1;
	MigrationColumnDefinition change_to = 2;
	string prev_uuid = 3;
	string next_uuid = 4;
	MigrationColumnDefinition next_record = 5;
}

message RenameColumn {
	string key = 1;
	string change_from = 2;
	string change_to = 3;
	string prev_uuid = 4;
	string next_uuid = 5;
	MigrationColumnDefinition prev_record = 6;
	MigrationColumnDefinition next_record = 7;
}

message ChangeColumnComment {
	string key = 1;
	string change_from = 2;
	string change_to = 3;
	string prev_uuid = 4;
	string next_uuid = 5;
	MigrationColumnDefinition prev_record = 6;
	MigrationColumnDefinition next_record = 7;
}

message ChangeColumn {
	string key = 1;
	string change_from = 2;
	string change_to = 3;
	string prev_uuid = 4;
	string next_uuid = 5;
	MigrationColumnDefinition prev_record = 6;
	MigrationColumnDefinition next_record = 7;
}

message ChangeColumnDefault {
	string key = 1;
	string change_from = 2;
	string change_to = 3;
	string prev_uuid = 4;
	string next_uuid = 5;
	MigrationColumnDefinition prev_record = 6;
	MigrationColumnDefinition next_record = 7;
}

message ChangeColumnNull {
	string key = 1;
	string change_from = 2;
	string change_to = 3;
	string prev_uuid = 4;
	string next_uuid = 5;
	MigrationColumnDefinition prev_record = 6;
	MigrationColumnDefinition next_record = 7;
}

message RemoveTableIndex {
	string key = 1;
	TableIndexMigration change_from = 2;
	string prev_uuid = 3;
	string next_uuid = 4;
	TableIndexMigration prev_record = 5;
}

message RemoveTableRelation {
	string key = 1;
	string prev_uuid = 3;
	string next_uuid = 4;
	TableRelationMigration prev_record = 5;
}

message CreateTableRelation {
	string key = 1;
	TableRelationMigration change_to = 2;
	string prev_uuid = 4;
	string next_uuid = 5;
	TableRelationMigration next_record = 6;
}

message RemoveColumn {
	string key = 1;
	MigrationColumnDefinition change_from = 2;
	string prev_uuid = 4;
	string next_uuid = 5;
	MigrationColumnDefinition prev_record = 6;
}

message DropTable {
	string key = 1;
	CreateTableNextRecord change_from = 2;
	string prev_uuid = 4;
	string next_uuid = 5;
	CreateTableNextRecord prev_record = 6;
}

message ChangeTableIndex {
	string key = 1;
	string change_from = 2;
	string change_to = 3;
	string prev_uuid = 4;
	string next_uuid = 5;
	TableIndexMigration prev_record = 6;
	TableIndexMigration next_record = 7;
}

message CreateTableIndex {
	string key = 1;
	TableIndexMigration change_to = 2;
	string next_uuid = 5;
	TableIndexMigration next_record = 7;
}

message AddUniqColumn {
	MigrationColumnDefinition next_record = 7;
}

message ChangeColumnUnique {
	string key = 1;
	bool change_from = 2;
	bool change_to = 3;
	string prev_uuid = 4;
	string next_uuid = 5;
	MigrationColumnDefinition prev_record = 6;
	MigrationColumnDefinition next_record = 7;
}

message CreateTableNextRecord {
	string name = 1;
	string uuid = 2;
	string comment = 3;
	repeated MigrationColumnDefinition column_definitions = 4;
}

message MigrationColumnDefinition {
	string name = 1;
	string column_type = 2;
	bool required = 3;
	bool unique = 4;
	string default_value = 5;
	string comment = 6;
	string uuid = 7;
	string table_definition_uuid = 8;
	optional bool custom_foreign_key = 9;
	optional TableMetaDataMigration table_definition = 10;
	int32 id = 11;
}

message TableMetaDataMigration {
	string name = 1;
	string uuid = 2;
}

message TableIndexMigration {
	string name = 1;
	bool unique = 2;
	string uuid = 3;
	string table_definition_uuid = 4;
	repeated MigrationColumnDefinition column_definitions = 5;
	bool single_index = 6;
	optional TableMetaDataMigration table_definition = 7;
	int32 id = 8;
}

message TableRelationMigration {
	string foreign_key = 1;
	string relation_type = 2;
	bool required = 3;
	string uuid = 4;
	string table_definition_uuid = 5;
	string related_table_uuid = 6;
	optional bool custom_foreign_key = 7;
	CreateTableChange table_definition = 8;
	CreateTableChange related_table = 9;
	int32 id = 10;
}

message WebApp {
	repeated AppPage app_pages = 1;
	repeated Asset assets = 2;
	repeated Variable variables = 3;
	repeated AppPageCategory categories = 4;
	repeated Localization localizations = 5;

	message Variable {
		string id = 1;
		VariableType type = 2;
		string name = 3;
		string value = 4;
	}

	enum VariableType {
		JS = 0;
		CSS = 1;
	}
}

message Asset {
	string id = 1;
	string url = 2;
	string file_name = 3;
	int32 file_size = 4;
	string content_type = 5;
}

message AppPage {
	string id = 1;
	string page_name = 2;
	string slug = 3;
	PageType page_type = 4;
	repeated PageNode nodes = 5;
	string category_id = 6;

	enum PageType {
		SCREEN = 0;
		MOLECULE = 1;
	}
}

message AppPageCategory {
	string id = 1;
	string name = 2;
}

message PageNode {
	string id = 1;
	string display_name = 2;
	string name = 3;
	string parent = 4;
	repeated string nodes = 5;
	map<string, string> linked_nodes = 6;
	string component_name = 7;
	NodeCustom custom = 8;

	oneof props {
		WebNodeProps web_props = 9;
		MobileNodeProps mobile_props = 10;
	}
}

message WebNodeProps {
	string element_key = 1;
	optional string button_type = 2;
	optional string span = 3;
	optional string offset = 4;
	optional string push_prop = 5;
	optional string pull_prop = 6;
	optional string order = 7;
	repeated int32 gutter = 8;
	optional string wrap = 9;
	optional string justify = 10;
	optional string align = 11;
	optional int32 pin_count = 12;
	optional bool auto_focus = 13;
	optional string otp_input_type = 14;
	optional string icon_name = 15;
	optional string icon_position = 16;
	optional string color = 17;
	optional string active_color = 18;
	optional string inactive_color = 19;
	optional string check_color = 20;
	optional string direction = 21;
	optional string size = 22;
	optional string label = 23;
	optional string date_mode = 24;
	optional string date_format = 25;
	optional string week_format = 26;
	optional string month_format = 27;
	optional string time_format = 28;
	optional string mode = 29;
	optional int32 space_between = 30;
	optional bool is_required_authentication = 31;
	optional string redirect_url = 32;
	optional string flex = 33;
	optional string source_type = 34;
	optional bool is_password_field = 35;
	optional string align_items = 36;
	optional string justify_content = 37;
	optional int32 xs = 38;
	optional int32 sm = 39;
	optional int32 md = 40;
	optional int32 lg = 41;
	optional int32 xl = 42;
	optional int32 xxl = 43;

	// { gutter: number, xs: number, md: number, xl: number }
	optional google.protobuf.Struct grid = 44;

	// { slidesToShow: number }
	optional google.protobuf.Struct xl_responsive = 45;
	optional google.protobuf.Struct md_responsive = 46;
	optional google.protobuf.Struct xs_responsive = 47;

	optional string picker = 48;
	optional bool show_time = 49;
	optional string format = 50;
	optional bool disabled_overflow = 51;
	optional bool multiple = 52;
	optional int32 max_count = 53;
	optional string placement = 54;
	optional int32 width = 55;
	optional bool closable = 56;
	optional bool header_visible = 57;
	optional string type = 58;
	optional string text_type = 59;
	optional int32 slides_to_show = 60;
	optional bool variable_width = 61;
	optional bool infinity = 62;
	optional bool infinite = 63;
	optional bool centered = 64;
	optional string tab_position = 65;
	optional google.protobuf.Struct tabs = 66;
	optional google.protobuf.Struct tab_label_style = 67;
	optional string default_active_key = 68;
	optional bool is_header_visible = 69;
	optional bool is_footer_visible = 70;
	optional bool is_data_sortable = 71;
	optional bool is_pagination_enabled = 72;
	optional string pagination_position = 73;
	optional int32 page_size = 74;

	optional google.protobuf.Struct body_style = 75;
	optional google.protobuf.Struct placeholder_style = 76;
	optional google.protobuf.Struct container_style = 77;
	optional google.protobuf.Struct dropdown_style = 78;
	optional google.protobuf.Struct option_style = 79;
	optional google.protobuf.Struct cell_style = 80;
	optional google.protobuf.Struct cell_text_style = 81;
	optional google.protobuf.Struct style = 82;
	optional google.protobuf.Struct button_style = 83;
	optional google.protobuf.Struct header_style = 84;
	optional google.protobuf.Struct wrapper_style = 85;
	optional google.protobuf.Struct table_style = 86;
	optional google.protobuf.Struct header_row_style = 87;
	optional google.protobuf.Struct header_column_style = 88;
	optional google.protobuf.Struct body_row_style = 89;
	optional google.protobuf.Struct body_column_style = 90;
	optional google.protobuf.Struct sort_column_style = 91;
	optional google.protobuf.Struct footer_row_style = 92;
	optional google.protobuf.Struct footer_column_style = 93;
	optional google.protobuf.Struct pagination_wrapper_style = 94;
	optional google.protobuf.Struct label_style = 95;
	optional google.protobuf.Struct input_style = 96;

	optional WebNodeProps ascending_icon_props = 97;
	optional WebNodeProps descending_icon_props = 98;
	optional WebNodeProps icon_props = 99;
	optional WebNodeProps drawer_props = 100;
	optional WebNodeProps button_props = 101;
	optional WebNodeProps prefix_icon_props = 102;
	optional WebNodeProps suffix_icon_props = 103;

	optional RenderMolecule render_item = 109;
	optional MoleculeComponent header = 110;
	optional MoleculeComponent footer = 111;

	repeated NodeVariable drawer_title = 112;
	repeated NodeVariable placeholder = 113;
	repeated NodeVariable input_label = 114;
	repeated NodeVariable href = 115;
	repeated NodeVariable action = 116;
	repeated NodeVariable data = 117;
	repeated NodeVariable total_page = 118;
	repeated NodeVariable default_value = 119;
	repeated NodeVariable source = 120;
	repeated NodeVariable title = 121;
	repeated NodeVariable children_data = 122;
	repeated NodeVariable responsive_visibility = 123;
	repeated NodeVariable data_source = 124;

	repeated TableColumn table_columns = 125;
	repeated TableColumn table_actions = 126;

	repeated NodeAction on_pagination_change = 127;
	repeated NodeAction on_data_sorting_change = 128;

	repeated NodeVariable value_data = 129;
	repeated NodeVariable on_change = 130;
	repeated NodeVariable on_click = 131;

	message TableColumn {
		RenderMolecule molecule = 1;
		bool sortable = 2;
		bool filterable = 3;
		int32 column_index = 4;
		repeated NodeVariable column_name = 5;
		repeated NodeVariable column_path = 6;
	}
}

message MobileNodeProps {
	string element_key = 1;
	optional string background_color = 2;
	optional string safe_area = 3;
	optional string placeholder_text_color = 4;
	optional bool secure_text_entry = 5;
	optional bool auto_correct = 6;
	optional bool show_clear_text = 7;
	optional bool show_character_counter = 8;
	optional int32 max_length = 9;
	optional string clear_icon_color = 10;
	optional string secure_eye_icon_color = 11;
	optional bool editable = 12;
	optional int32 number_of_lines = 13;
	optional bool vertical = 14;
	optional bool loop = 15;
	optional int32 timeout = 16;
	optional bool horizontal = 17;
	optional int32 num_columns = 18;
	optional string source_type = 19;
	optional bool use_default_back_button = 20;
	optional bool auto_focus = 21;
	optional int32 pin_count = 22;
	optional string position = 23;
	optional string return_key_type = 24;
	optional string resize_mode = 25;
	optional string keyboard_type = 26;
	optional string auto_capitalize = 27;
	optional string date_mode = 28;
	optional string mode = 29;
	optional bool infinity = 30;
	optional bool inverted = 31;
	optional string name = 32;
	optional int32 size = 33;
	optional string color = 34;
	optional string type = 35;
	optional string left_icon_name = 36;
	optional string left_icon_type = 37;
	optional int32 left_icon_size = 38;
	optional string left_icon_color = 39;
	optional string right_icon_name = 40;
	optional string right_icon_type = 41;
	optional int32 right_icon_size = 42;
	optional string right_icon_color = 43;
	optional string launcher_type = 44;
	optional string otp_input_type = 45;
	optional float border_bottom_width = 46;
	optional string border_bottom_color = 47;

	optional google.protobuf.Struct style = 48;
	optional google.protobuf.Struct content_container_style = 49;
	optional google.protobuf.Struct input_style = 50;
	optional google.protobuf.Struct label_style = 51;
	optional google.protobuf.Struct character_counter_style = 52;
	optional google.protobuf.Struct cell_style = 53;
	optional google.protobuf.Struct cell_text_style = 54;
	optional google.protobuf.Struct title_style = 55;

	optional RenderMolecule render_item = 56;
	optional RenderMolecule preview = 57;
	optional RenderMolecule component = 58;

	optional MoleculeComponent list_empty_component = 59;
	optional MoleculeComponent list_header_component = 60;
	optional MoleculeComponent list_footer_component = 61;
	optional MoleculeComponent item_separator_component = 62;

	optional NodeReference key_extractor = 63;

	repeated NodeVariable placeholder = 64;
	repeated NodeVariable data = 65;
	repeated NodeVariable source = 66;
	repeated NodeVariable title = 67;
	repeated NodeVariable children_data = 68;
}

message RenderMolecule {
	optional NodeReference reference = 1;
	repeated FunctionArgument arguments = 2;
	repeated NodeParam props = 3;
}

message NodeReference {
	string name = 1;
	string ref_id = 2;
	google.protobuf.Struct ref_data = 3;
	string value = 4;
	ReferenceRefType ref_type = 5;

	enum ReferenceRefType {
		NONE = 0;
		API_REQUEST = 1;
		API_REQUEST_PARAM = 2;
		API_BUSINESS_PROCESS = 3;
		API_RESPONSE_DATA = 4;
		COLUMN_DEFINITION = 5;
		MOBILE_APP_ASSET = 6;
		MOBILE_APP_PAGE = 7;
		MOBILE_APP_PAGE_ACTION = 8;
		MOBILE_APP_PAGE_NODE = 9;
		MOBILE_APP_PAGE_PARAM = 10;
		MOBILE_APP_PAGE_FORM = 11;
		MOBILE_NAVIGATION = 12;
		MOBILE_NAVIGATION_NODE = 13;
		MOBILE_MOLECULE_PROP = 14;
		TABLE_DEFINITION = 15;
		PROJECT_VARIABLE = 16;
		LOCALIZATION = 17;
	}
}

message FunctionArgument {
	string name = 1;
	string argument_type = 2;
	bool plural = 3;
	NodeReference reference = 4;
}

message NodeParam {
	string name = 1;
	string param_type = 2;
	repeated string param_type_enum = 3;
	string default_value = 4;
	bool plural = 5;
	bool automated = 6;
	NodeReference reference = 7;
	NodeVariable value = 8;
	repeated NodeAction actions = 9;
	repeated FunctionArgument function_arguments = 10;
}

message NodeVariable {
	string local_id = 1;
	string name = 2;
	string value = 3;
	string value_path = 4;
	string default_value = 5;
	string value_type = 6;
	VariableDefaultType default_type = 7;
	VariableSource source = 8;
	VariableType variable_type = 9;
	repeated NodeReference values = 10;

	enum VariableDefaultType {
		STRING = 0;
		VARIABLE = 1;
	}

	enum VariableSource {
		PARAMS = 0;
		FORM_VALUES = 1;
		ACTION_RESPONSE = 2;
		STORAGE = 3;
		AUTHENTICATED_USER = 4;
		MOLECULE_PROPS = 5;
		PROJECT_ASSET = 6;
		CONTEXT_VALUES = 7;
		LOCAL_CONTEXT_RESPONSE = 8;
		FORM_VALIDATION_ERROR_MESSAGE = 9;
		CSS_VARIABLE = 10;
		LOCALIZATION = 11;
	}

	enum VariableType {
		STATIC = 0;
		DYNAMIC = 1;
	}
}

message NodeAction {
	string action = 1;
	string value = 2;
	ActionType action_type = 3;
	ActionSource source = 4;
	repeated NodePayload payload = 5;
	repeated NodePayload response = 6;
	repeated NodeReference values = 7;
	repeated NodeAction success_actions = 8;
	repeated NodeAction error_actions = 9;

	enum ActionType {
		API = 0;
		GENERAL = 1;
	}

	enum ActionSource {
		AUTHENTICATION = 0;
		BACKEND_CALL = 1;
		FORM_SUBMIT = 2;
		NAVIGATION = 3;
		SHOW_TOAST_MESSAGE = 4;
		MOLECULE_PROPS = 5;
		MODAL = 6;
		EVENT_LOG = 7;
		REQUEST_NOTIFICATION_PERMISSION = 8;
		DRAWER = 9;
	}
}

message NodePayload {
	NodeVariable value = 1;
	NodeReference reference = 2;
	repeated NodeAction actions = 3;
}

message MoleculeComponent {
	NodeReference reference = 1;
	repeated NodeParam props = 2;
}

message NodeCustom {
	optional bool use_prop_style = 1;
	optional bool ignore_prop_style = 2;
	optional NodeReference form = 3;
	optional NodeReference molecule = 4;
	repeated NodeMediaQuery media_queries = 5;
	optional NodeReference authentication = 6;
	optional RenderCondition render_condition = 7;
	repeated NodeVariable seo_title = 8;
	repeated NodeVariable seo_description = 9;
	repeated NodeAction actions = 10;
	repeated NodeParam params = 11;
	repeated NodeParam props = 12;
	repeated NodeVariable children_data = 13;
	repeated FormValidation form_validations = 14;
	repeated FormDefaultValue form_default_values = 15;
}

message FormDefaultValue {
	NodeReference reference = 1;
	NodeVariable value = 2;
}

message NodeMediaQuery {
	int32 lower = 1;
	int32 upper = 2;
	google.protobuf.Struct style = 3;
}

message RenderCondition {
	bool enabled = 1;
	repeated Condition conditions = 2;

	message Condition {
		Source source = 1;
		Operator operator = 2;
		NodeVariable left = 3;
		NodeVariable right = 4;
	}

	enum Source {
		BINARY = 0;
		GLOBAL = 1;
	}

	enum Operator {
		LESS_THAN = 0;
		LESS_EQUAL_THAN = 1;
		EQUAL = 2;
		NOT_EQUAL = 3;
		GREATER_THAN = 4;
		GREATER_EQUAL_THAN = 5;
		EXIST = 6;
		NOT_EXIST = 7;
	}
}

message FormValidation {
	ValidationType validation_type = 1;
	repeated FormValidationsRule validation_rules = 2;

	message FormValidationsRule {
		string value = 1;
		string value_type = 2;
		repeated NodeVariable error_messages = 3;
		RuleType rule_type = 4;
	}

	enum ValidationType {
		TEXT = 0;
		NUMBER = 1;
		EMAIL = 2;
		PASSWORD = 3;
		PHONE_NUMBER = 4;
	}

	enum RuleType {
		REQUIRED = 0;
		MAXIMUM = 1;
		MINIMUM = 2;
		REGEX = 3;
	}
}

service CoreService {
  rpc ListTables (ListTablesRequest) returns (ListTablesResponse) {}
	rpc ListControllers (ListControllersRequest) returns (ListControllersResponse) {}
	rpc ListFeatures (ListFeaturesRequest) returns (ListFeaturesResponse) {}
	rpc ListAuthorizations (ListAuthorizationsRequest) returns (ListAuthorizationsResponse) {}
	rpc ListBeLocalizations (ListLocalizationsRequest) returns (ListLocalizationsResponse) {}
	rpc ListFeLocalizations (ListLocalizationsRequest) returns (ListLocalizationsResponse) {}
	rpc ListMigrations (ListMigrationsRequest) returns (ListMigrationsResponse) {}
	rpc GetBackend (GetBackendRequest) returns (GetBackendResponse) {}
	rpc GetWebApp (GetWebAppRequest) returns (GetWebAppResponse) {}
}

message GetWebAppRequest {
	int32 project_id = 1;
}

message GetWebAppResponse {
	WebApp web_app = 1;
}

message GetBackendRequest {
	int32 project_id = 1;
}

message GetBackendResponse {
	Backend backend = 1;
}

message ListTablesRequest {
	int32 project_id = 1;
}

message ListTablesResponse {
	repeated Table tables = 1;
}

message ListMigrationsRequest {
	int32 project_id = 1;
}

message ListControllersRequest {
	int32 project_id = 1;
}

message ListControllersResponse {
	repeated Controller controllers = 1;
}

message ListFeaturesRequest {
	int32 project_id = 1;
}

message ListFeaturesResponse {
	repeated Feature features = 1;
}

message ListAuthorizationsRequest {
	int32 project_id = 1;
}

message ListAuthorizationsResponse {
	repeated Authorization authorizations = 1;
}

message ListLocalizationsRequest {
	int32 project_id = 1;
}

message ListLocalizationsResponse {
	repeated Localization localizations = 1;
}

message ListMigrationsResponse {
	repeated Migration migrations = 1;
}
