<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: payload.proto

namespace Schema\V1\Feature;

use UnexpectedValueException;

/**
 * Protobuf type <code>schema.v1.Feature.FeatureName</code>
 */
class FeatureName
{
    /**
     * Generated from protobuf enum <code>EMAIL_LOGIN = 0;</code>
     */
    const EMAIL_LOGIN = 0;
    /**
     * Generated from protobuf enum <code>JP_BANKS_DATA = 1;</code>
     */
    const JP_BANKS_DATA = 1;
    /**
     * Generated from protobuf enum <code>BASIC_AUTH = 2;</code>
     */
    const BASIC_AUTH = 2;
    /**
     * Generated from protobuf enum <code>TWILIO_LOGIN = 3;</code>
     */
    const TWILIO_LOGIN = 3;
    /**
     * Generated from protobuf enum <code>ROLLBAR = 4;</code>
     */
    const ROLLBAR = 4;
    /**
     * Generated from protobuf enum <code>DEEP_LINK = 5;</code>
     */
    const DEEP_LINK = 5;
    /**
     * Generated from protobuf enum <code>STRIPE = 6;</code>
     */
    const STRIPE = 6;
    /**
     * Generated from protobuf enum <code>LINE_LOGIN = 7;</code>
     */
    const LINE_LOGIN = 7;
    /**
     * Generated from protobuf enum <code>EMAIL_CONFIG = 8;</code>
     */
    const EMAIL_CONFIG = 8;

    private static $valueToName = [
        self::EMAIL_LOGIN => 'EMAIL_LOGIN',
        self::JP_BANKS_DATA => 'JP_BANKS_DATA',
        self::BASIC_AUTH => 'BASIC_AUTH',
        self::TWILIO_LOGIN => 'TWILIO_LOGIN',
        self::ROLLBAR => 'ROLLBAR',
        self::DEEP_LINK => 'DEEP_LINK',
        self::STRIPE => 'STRIPE',
        self::LINE_LOGIN => 'LINE_LOGIN',
        self::EMAIL_CONFIG => 'EMAIL_CONFIG',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(FeatureName::class, \Schema\V1\Feature_FeatureName::class);

