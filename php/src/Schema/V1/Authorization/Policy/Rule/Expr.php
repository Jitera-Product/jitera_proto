<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: payloads.proto

namespace Schema\V1\Authorization\Policy\Rule;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>schema.v1.Authorization.Policy.Rule.Expr</code>
 */
class Expr extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string column = 1;</code>
     */
    protected $column = '';
    /**
     * Generated from protobuf field <code>.schema.v1.DataType data_type = 4;</code>
     */
    protected $data_type = null;
    /**
     * Generated from protobuf field <code>.schema.v1.Operator operator = 5;</code>
     */
    protected $operator = 0;
    protected $map_to;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $column
     *     @type string $value
     *     @type string $paths
     *     @type \Schema\V1\DataType $data_type
     *     @type int $operator
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Payloads::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string column = 1;</code>
     * @return string
     */
    public function getColumn()
    {
        return $this->column;
    }

    /**
     * Generated from protobuf field <code>string column = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setColumn($var)
    {
        GPBUtil::checkString($var, True);
        $this->column = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string value = 2;</code>
     * @return string
     */
    public function getValue()
    {
        return $this->readOneof(2);
    }

    public function hasValue()
    {
        return $this->hasOneof(2);
    }

    /**
     * Generated from protobuf field <code>string value = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setValue($var)
    {
        GPBUtil::checkString($var, True);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>string paths = 3;</code>
     * @return string
     */
    public function getPaths()
    {
        return $this->readOneof(3);
    }

    public function hasPaths()
    {
        return $this->hasOneof(3);
    }

    /**
     * Generated from protobuf field <code>string paths = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setPaths($var)
    {
        GPBUtil::checkString($var, True);
        $this->writeOneof(3, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.schema.v1.DataType data_type = 4;</code>
     * @return \Schema\V1\DataType|null
     */
    public function getDataType()
    {
        return $this->data_type;
    }

    public function hasDataType()
    {
        return isset($this->data_type);
    }

    public function clearDataType()
    {
        unset($this->data_type);
    }

    /**
     * Generated from protobuf field <code>.schema.v1.DataType data_type = 4;</code>
     * @param \Schema\V1\DataType $var
     * @return $this
     */
    public function setDataType($var)
    {
        GPBUtil::checkMessage($var, \Schema\V1\DataType::class);
        $this->data_type = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.schema.v1.Operator operator = 5;</code>
     * @return int
     */
    public function getOperator()
    {
        return $this->operator;
    }

    /**
     * Generated from protobuf field <code>.schema.v1.Operator operator = 5;</code>
     * @param int $var
     * @return $this
     */
    public function setOperator($var)
    {
        GPBUtil::checkEnum($var, \Schema\V1\Operator::class);
        $this->operator = $var;

        return $this;
    }

    /**
     * @return string
     */
    public function getMapTo()
    {
        return $this->whichOneof("map_to");
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Expr::class, \Schema\V1\Authorization_Policy_Rule_Expr::class);

