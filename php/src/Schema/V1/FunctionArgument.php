<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: payload.proto

namespace Schema\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>schema.v1.FunctionArgument</code>
 */
class FunctionArgument extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string name = 1;</code>
     */
    protected $name = '';
    /**
     * Generated from protobuf field <code>string argument_type = 2;</code>
     */
    protected $argument_type = '';
    /**
     * Generated from protobuf field <code>bool plural = 3;</code>
     */
    protected $plural = false;
    /**
     * Generated from protobuf field <code>.schema.v1.NodeReference reference = 4;</code>
     */
    protected $reference = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $name
     *     @type string $argument_type
     *     @type bool $plural
     *     @type \Schema\V1\NodeReference $reference
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Payload::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string name = 1;</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Generated from protobuf field <code>string name = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string argument_type = 2;</code>
     * @return string
     */
    public function getArgumentType()
    {
        return $this->argument_type;
    }

    /**
     * Generated from protobuf field <code>string argument_type = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setArgumentType($var)
    {
        GPBUtil::checkString($var, True);
        $this->argument_type = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>bool plural = 3;</code>
     * @return bool
     */
    public function getPlural()
    {
        return $this->plural;
    }

    /**
     * Generated from protobuf field <code>bool plural = 3;</code>
     * @param bool $var
     * @return $this
     */
    public function setPlural($var)
    {
        GPBUtil::checkBool($var);
        $this->plural = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.schema.v1.NodeReference reference = 4;</code>
     * @return \Schema\V1\NodeReference|null
     */
    public function getReference()
    {
        return $this->reference;
    }

    public function hasReference()
    {
        return isset($this->reference);
    }

    public function clearReference()
    {
        unset($this->reference);
    }

    /**
     * Generated from protobuf field <code>.schema.v1.NodeReference reference = 4;</code>
     * @param \Schema\V1\NodeReference $var
     * @return $this
     */
    public function setReference($var)
    {
        GPBUtil::checkMessage($var, \Schema\V1\NodeReference::class);
        $this->reference = $var;

        return $this;
    }

}

