<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: v1/project_import.proto

namespace Schema\V1\ProjectAnalysisReport;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>schema.v1.ProjectAnalysisReport.Payload</code>
 */
class Payload extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string data = 1;</code>
     */
    protected $data = '';
    /**
     * Generated from protobuf field <code>string module = 2;</code>
     */
    protected $module = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $data
     *     @type string $module
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\V1\ProjectImport::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string data = 1;</code>
     * @return string
     */
    public function getData()
    {
        return $this->data;
    }

    /**
     * Generated from protobuf field <code>string data = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setData($var)
    {
        GPBUtil::checkString($var, True);
        $this->data = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string module = 2;</code>
     * @return string
     */
    public function getModule()
    {
        return $this->module;
    }

    /**
     * Generated from protobuf field <code>string module = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setModule($var)
    {
        GPBUtil::checkString($var, True);
        $this->module = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Payload::class, \Schema\V1\ProjectAnalysisReport_Payload::class);

