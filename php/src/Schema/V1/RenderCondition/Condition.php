<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: v1/payloads.proto

namespace Schema\V1\RenderCondition;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>schema.v1.RenderCondition.Condition</code>
 */
class Condition extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.schema.v1.RenderCondition.Source source = 1;</code>
     */
    protected $source = 0;
    /**
     * Generated from protobuf field <code>.schema.v1.RenderCondition.Operator operator = 2;</code>
     */
    protected $operator = 0;
    /**
     * Generated from protobuf field <code>.schema.v1.NodeVariable left = 3;</code>
     */
    protected $left = null;
    /**
     * Generated from protobuf field <code>.schema.v1.NodeVariable right = 4;</code>
     */
    protected $right = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $source
     *     @type int $operator
     *     @type \Schema\V1\NodeVariable $left
     *     @type \Schema\V1\NodeVariable $right
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\V1\Payloads::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.schema.v1.RenderCondition.Source source = 1;</code>
     * @return int
     */
    public function getSource()
    {
        return $this->source;
    }

    /**
     * Generated from protobuf field <code>.schema.v1.RenderCondition.Source source = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setSource($var)
    {
        GPBUtil::checkEnum($var, \Schema\V1\RenderCondition\Source::class);
        $this->source = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.schema.v1.RenderCondition.Operator operator = 2;</code>
     * @return int
     */
    public function getOperator()
    {
        return $this->operator;
    }

    /**
     * Generated from protobuf field <code>.schema.v1.RenderCondition.Operator operator = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setOperator($var)
    {
        GPBUtil::checkEnum($var, \Schema\V1\RenderCondition\Operator::class);
        $this->operator = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.schema.v1.NodeVariable left = 3;</code>
     * @return \Schema\V1\NodeVariable|null
     */
    public function getLeft()
    {
        return $this->left;
    }

    public function hasLeft()
    {
        return isset($this->left);
    }

    public function clearLeft()
    {
        unset($this->left);
    }

    /**
     * Generated from protobuf field <code>.schema.v1.NodeVariable left = 3;</code>
     * @param \Schema\V1\NodeVariable $var
     * @return $this
     */
    public function setLeft($var)
    {
        GPBUtil::checkMessage($var, \Schema\V1\NodeVariable::class);
        $this->left = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.schema.v1.NodeVariable right = 4;</code>
     * @return \Schema\V1\NodeVariable|null
     */
    public function getRight()
    {
        return $this->right;
    }

    public function hasRight()
    {
        return isset($this->right);
    }

    public function clearRight()
    {
        unset($this->right);
    }

    /**
     * Generated from protobuf field <code>.schema.v1.NodeVariable right = 4;</code>
     * @param \Schema\V1\NodeVariable $var
     * @return $this
     */
    public function setRight($var)
    {
        GPBUtil::checkMessage($var, \Schema\V1\NodeVariable::class);
        $this->right = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Condition::class, \Schema\V1\RenderCondition_Condition::class);

