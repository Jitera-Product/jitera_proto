<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: payload.proto

namespace Schema\V1\Table\Column\FileType;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>schema.v1.Table.Column.FileType.NumberOfFiles</code>
 */
class NumberOfFiles extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>int32 minimum = 1;</code>
     */
    protected $minimum = 0;
    /**
     * Generated from protobuf field <code>int32 maximum = 2;</code>
     */
    protected $maximum = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $minimum
     *     @type int $maximum
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Payload::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>int32 minimum = 1;</code>
     * @return int
     */
    public function getMinimum()
    {
        return $this->minimum;
    }

    /**
     * Generated from protobuf field <code>int32 minimum = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setMinimum($var)
    {
        GPBUtil::checkInt32($var);
        $this->minimum = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>int32 maximum = 2;</code>
     * @return int
     */
    public function getMaximum()
    {
        return $this->maximum;
    }

    /**
     * Generated from protobuf field <code>int32 maximum = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setMaximum($var)
    {
        GPBUtil::checkInt32($var);
        $this->maximum = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(NumberOfFiles::class, \Schema\V1\Table_Column_FileType_NumberOfFiles::class);

