<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: payload.proto

namespace Schema\V1\Table\Column;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>schema.v1.Table.Column.StringType</code>
 */
class StringType extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>optional string default_value = 1;</code>
     */
    protected $default_value = null;
    /**
     * Generated from protobuf field <code>bool is_text = 2;</code>
     */
    protected $is_text = false;
    /**
     * Generated from protobuf field <code>repeated .schema.v1.Table.Column.StringType.Format formats = 3;</code>
     */
    private $formats;
    /**
     * Generated from protobuf field <code>repeated .schema.v1.Table.Column.StringType.Condition conditions = 4;</code>
     */
    private $conditions;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $default_value
     *     @type bool $is_text
     *     @type array<int>|\Google\Protobuf\Internal\RepeatedField $formats
     *     @type array<\Schema\V1\Table\Column\StringType\Condition>|\Google\Protobuf\Internal\RepeatedField $conditions
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Payload::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>optional string default_value = 1;</code>
     * @return string
     */
    public function getDefaultValue()
    {
        return isset($this->default_value) ? $this->default_value : '';
    }

    public function hasDefaultValue()
    {
        return isset($this->default_value);
    }

    public function clearDefaultValue()
    {
        unset($this->default_value);
    }

    /**
     * Generated from protobuf field <code>optional string default_value = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setDefaultValue($var)
    {
        GPBUtil::checkString($var, True);
        $this->default_value = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>bool is_text = 2;</code>
     * @return bool
     */
    public function getIsText()
    {
        return $this->is_text;
    }

    /**
     * Generated from protobuf field <code>bool is_text = 2;</code>
     * @param bool $var
     * @return $this
     */
    public function setIsText($var)
    {
        GPBUtil::checkBool($var);
        $this->is_text = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>repeated .schema.v1.Table.Column.StringType.Format formats = 3;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getFormats()
    {
        return $this->formats;
    }

    /**
     * Generated from protobuf field <code>repeated .schema.v1.Table.Column.StringType.Format formats = 3;</code>
     * @param array<int>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setFormats($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::ENUM, \Schema\V1\Table\Column\StringType\Format::class);
        $this->formats = $arr;

        return $this;
    }

    /**
     * Generated from protobuf field <code>repeated .schema.v1.Table.Column.StringType.Condition conditions = 4;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getConditions()
    {
        return $this->conditions;
    }

    /**
     * Generated from protobuf field <code>repeated .schema.v1.Table.Column.StringType.Condition conditions = 4;</code>
     * @param array<\Schema\V1\Table\Column\StringType\Condition>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setConditions($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Schema\V1\Table\Column\StringType\Condition::class);
        $this->conditions = $arr;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(StringType::class, \Schema\V1\Table_Column_StringType::class);

