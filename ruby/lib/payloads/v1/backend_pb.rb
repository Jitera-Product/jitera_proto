# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: v1/backend.proto

require 'google/protobuf'

Google::Protobuf::DescriptorPool.generated_pool.build do
  add_file("v1/backend.proto", :syntax => :proto3) do
    add_message "schema.v1.Backend" do
      repeated :tables, :message, 4, "schema.v1.Table"
      repeated :controllers, :message, 5, "schema.v1.Controller"
      repeated :features, :message, 6, "schema.v1.Feature"
      repeated :authorizations, :message, 7, "schema.v1.Authorization"
      repeated :localizations, :message, 8, "schema.v1.Localization"
      repeated :migrations, :message, 9, "schema.v1.Migration"
    end
    add_message "schema.v1.Localization" do
      optional :lang, :string, 1
      repeated :namespaces, :message, 3, "schema.v1.Localization.Namespace"
    end
    add_message "schema.v1.Localization.Namespace" do
      optional :name, :string, 1
      repeated :translates, :message, 2, "schema.v1.Localization.Translate"
    end
    add_message "schema.v1.Localization.Translate" do
      optional :key, :string, 1
      optional :value, :string, 2
    end
    add_message "schema.v1.DataType" do
      optional :name, :enum, 1, "schema.v1.DataTypeName"
    end
    add_message "schema.v1.Authorization" do
      optional :name, :string, 1
      optional :id, :int32, 2
      repeated :policies, :message, 3, "schema.v1.Authorization.Policy"
    end
    add_message "schema.v1.Authorization.Policy" do
      optional :resource, :string, 3
      optional :role_binding, :message, 4, "schema.v1.Authorization.Policy.RoleBinding"
      optional :rule, :message, 5, "schema.v1.Authorization.Policy.Rule"
      optional :scope, :enum, 6, "schema.v1.Authorization.Policy.Scope"
    end
    add_message "schema.v1.Authorization.Policy.RoleBinding" do
      optional :table, :string, 1
      optional :column, :string, 2
      optional :role, :string, 3
    end
    add_message "schema.v1.Authorization.Policy.Rule" do
      repeated :operands, :message, 1, "schema.v1.Authorization.Policy.Rule.Operand"
      repeated :operators, :enum, 2, "schema.v1.Operator"
    end
    add_message "schema.v1.Authorization.Policy.Rule.Operand" do
      oneof :operand do
        optional :expr, :message, 1, "schema.v1.Authorization.Policy.Rule.Expr"
        optional :rule, :message, 2, "schema.v1.Authorization.Policy.Rule"
      end
    end
    add_message "schema.v1.Authorization.Policy.Rule.Expr" do
      optional :column, :string, 1
      optional :data_type, :message, 4, "schema.v1.DataType"
      optional :operator, :enum, 5, "schema.v1.Operator"
      oneof :map_to do
        optional :value, :string, 2
        optional :paths, :string, 3
      end
    end
    add_enum "schema.v1.Authorization.Policy.Scope" do
      value :ALL, 0
      value :ASSOCIATED, 1
    end
    add_message "schema.v1.Feature" do
      optional :name, :enum, 1, "schema.v1.Feature.FeatureName"
      optional :env, :enum, 2, "schema.v1.Feature.Environment"
      oneof :types do
        optional :email_login, :message, 3, "schema.v1.Feature.EmailLogin"
        optional :jp_bank_data, :message, 4, "schema.v1.Feature.JPBankData"
        optional :basic_auth, :message, 5, "schema.v1.Feature.BasicAuth"
        optional :twilio_login, :message, 6, "schema.v1.Feature.TwilioLogin"
        optional :rollbar, :message, 7, "schema.v1.Feature.Rollbar"
        optional :deep_link, :message, 8, "schema.v1.Feature.DeepLink"
        optional :stripe, :message, 9, "schema.v1.Feature.Stripe"
        optional :line_login, :message, 10, "schema.v1.Feature.LineLogin"
        optional :google_analytics, :message, 11, "schema.v1.Feature.GoogleAnalytics"
        optional :scout_apm, :message, 12, "schema.v1.Feature.ScoutApm"
        optional :google_tag_manager, :message, 13, "schema.v1.Feature.GoogleTagManager"
        optional :email_config, :message, 14, "schema.v1.Feature.EmailConfig"
      end
    end
    add_message "schema.v1.Feature.EmailLogin" do
      repeated :tables, :string, 1
      optional :password_min_length, :int32, 2
      optional :remember_for, :int32, 3
      optional :reset_password_within, :int32, 4
      optional :maximum_retries, :int32, 5
      optional :unlock_strategy, :enum, 6, "schema.v1.Feature.EmailLogin.UnlockStrategy"
      optional :unlock_in, :int32, 7
      optional :password_regex, :string, 8
      optional :confirmation_email, :bool, 9
    end
    add_enum "schema.v1.Feature.EmailLogin.UnlockStrategy" do
      value :TIME, 0
      value :EMAIL, 1
      value :BOTH, 2
    end
    add_message "schema.v1.Feature.JPBankData" do
    end
    add_message "schema.v1.Feature.BasicAuth" do
      optional :username, :string, 1
      optional :password, :string, 2
    end
    add_message "schema.v1.Feature.TwilioLogin" do
      repeated :user_tables, :string, 1
      optional :service_id, :string, 2
      optional :sid, :string, 3
      optional :token, :string, 4
      optional :otp_length, :int32, 5
    end
    add_message "schema.v1.Feature.Rollbar" do
      optional :access_token, :string, 1
    end
    add_message "schema.v1.Feature.DeepLink" do
      optional :ios_app_store_id, :string, 1
      optional :ios_bundle_id, :string, 2
      optional :ios_app_link, :string, 3
      optional :android_package_name, :string, 4
      optional :android_cert_fingerprints, :string, 5
      optional :android_app_link, :string, 6
      optional :firebase_domain, :string, 7
    end
    add_message "schema.v1.Feature.Stripe" do
      repeated :subscription_tables, :string, 1
      repeated :user_tables, :string, 2
      optional :public_key, :string, 3
      optional :secret_key, :string, 4
      optional :stripe_endpoint_secret, :string, 5
      optional :http_stripe_signature, :string, 6
      optional :add_stripe_subscription, :bool, 7
      optional :add_charge_api, :bool, 8
      optional :add_intent_api, :bool, 9
    end
    add_message "schema.v1.Feature.LineLogin" do
      repeated :user_tables, :string, 1
      optional :client_id, :string, 2
      optional :secret_key, :string, 3
    end
    add_message "schema.v1.Feature.GoogleAnalytics" do
      optional :measurement_id, :string, 1
    end
    add_message "schema.v1.Feature.GoogleTagManager" do
      optional :container_id, :string, 1
    end
    add_message "schema.v1.Feature.ScoutApm" do
      optional :key_id, :string, 1
    end
    add_message "schema.v1.Feature.EmailConfig" do
      optional :address, :string, 1
      optional :username, :string, 2
      optional :password, :string, 3
      optional :default_from_email, :string, 4
      optional :service_provider, :string, 5
    end
    add_enum "schema.v1.Feature.FeatureName" do
      value :NIL, 0
      value :EMAIL_LOGIN, 1
      value :JP_BANKS_DATA, 2
      value :BASIC_AUTH, 3
      value :TWILIO_LOGIN, 4
      value :ROLLBAR, 5
      value :DEEP_LINK, 6
      value :STRIPE, 7
      value :LINE_LOGIN, 8
      value :GOOGLE_ANALYTICS, 9
      value :SCOUT_APM, 10
      value :GOOGLE_TAG_MANAGER, 11
      value :EMAIL_CONFIG, 12
    end
    add_enum "schema.v1.Feature.Environment" do
      value :DEVELOPMENT, 0
      value :STAGING, 1
      value :PRODUCTION, 2
      value :ALL, 3
    end
    add_message "schema.v1.Controller" do
      optional :name, :string, 1
      repeated :endpoints, :message, 2, "schema.v1.Controller.Endpoint"
    end
    add_message "schema.v1.Controller.Endpoint" do
      optional :path, :string, 1
      optional :name, :string, 2
      optional :authentication, :message, 10, "schema.v1.Controller.Authentication"
      optional :authorization, :message, 11, "schema.v1.Controller.Authorization"
      optional :responses, :message, 12, "schema.v1.Controller.Response"
      optional :params, :message, 13, "schema.v1.Controller.RequestContent"
      optional :writable, :bool, 14
      proto3_optional :feature_action, :string, 15
      proto3_optional :feature_table, :string, 16
      repeated :authorization_groups, :message, 17, "schema.v1.Controller.AuthorizationGroup"
      optional :restrict_access, :bool, 18
      oneof :resource do
        optional :table, :string, 3
        optional :feature, :enum, 4, "schema.v1.Feature.FeatureName"
      end
      oneof :methods do
        optional :list, :message, 5, "schema.v1.Controller.Endpoint.List"
        optional :get, :message, 6, "schema.v1.Controller.Endpoint.Get"
        optional :create, :message, 7, "schema.v1.Controller.Endpoint.Create"
        optional :update, :message, 8, "schema.v1.Controller.Endpoint.Update"
        optional :delete, :message, 9, "schema.v1.Controller.Endpoint.Delete"
      end
    end
    add_message "schema.v1.Controller.Endpoint.List" do
      optional :queries, :message, 1, "schema.v1.Controller.RequestContent"
      optional :conditions, :message, 2, "schema.v1.Controller.ResourceCondition"
    end
    add_message "schema.v1.Controller.Endpoint.Get" do
      optional :queries, :message, 1, "schema.v1.Controller.RequestContent"
      optional :conditions, :message, 2, "schema.v1.Controller.ResourceCondition"
    end
    add_message "schema.v1.Controller.Endpoint.Create" do
      optional :body, :message, 1, "schema.v1.Controller.RequestContent"
      optional :conditions, :message, 2, "schema.v1.Controller.ResourceCondition"
      optional :resources, :message, 3, "schema.v1.Controller.ResourceUpdate"
    end
    add_message "schema.v1.Controller.Endpoint.Update" do
      optional :body, :message, 1, "schema.v1.Controller.RequestContent"
      optional :conditions, :message, 2, "schema.v1.Controller.ResourceCondition"
      optional :resources, :message, 3, "schema.v1.Controller.ResourceUpdate"
    end
    add_message "schema.v1.Controller.Endpoint.Delete" do
      optional :body, :message, 1, "schema.v1.Controller.RequestContent"
      optional :conditions, :message, 2, "schema.v1.Controller.ResourceCondition"
    end
    add_message "schema.v1.Controller.RequestContent" do
      repeated :fields, :message, 1, "schema.v1.Controller.RequestContent.Field"
    end
    add_message "schema.v1.Controller.RequestContent.Field" do
      optional :name, :string, 1
      optional :data_type, :message, 2, "schema.v1.DataType"
      repeated :children, :message, 3, "schema.v1.Controller.RequestContent.Field"
    end
    add_message "schema.v1.Controller.Response" do
      repeated :fields, :message, 1, "schema.v1.Controller.Response.Field"
    end
    add_message "schema.v1.Controller.Response.Field" do
      optional :name, :string, 1
      optional :data_type, :message, 5, "schema.v1.DataType"
      repeated :children, :message, 6, "schema.v1.Controller.Response.Field"
      optional :category, :string, 7
      oneof :map_to do
        optional :resource, :string, 2
        optional :property, :string, 3
        optional :value, :string, 4
      end
    end
    add_message "schema.v1.Controller.ResourceCondition" do
      repeated :operands, :message, 1, "schema.v1.Controller.ResourceCondition.Operand"
      repeated :operators, :enum, 2, "schema.v1.Operator"
    end
    add_message "schema.v1.Controller.ResourceCondition.Operand" do
      oneof :operand do
        optional :expr, :message, 1, "schema.v1.Controller.ResourceCondition.Expr"
        optional :condition, :message, 2, "schema.v1.Controller.ResourceCondition"
      end
    end
    add_message "schema.v1.Controller.ResourceCondition.Expr" do
      repeated :paths, :string, 1
      optional :data_type, :message, 8, "schema.v1.DataType"
      optional :operator, :enum, 9, "schema.v1.Operator"
      oneof :map_to do
        optional :query, :string, 2
        optional :params, :string, 3
        optional :body, :string, 4
        optional :value, :string, 5
        optional :system, :enum, 7, "schema.v1.Controller.ResourceCondition.System"
      end
    end
    add_enum "schema.v1.Controller.ResourceCondition.System" do
      value :RESOURCE_OWNER, 0
    end
    add_message "schema.v1.Controller.ResourceUpdate" do
      repeated :fields, :message, 1, "schema.v1.Controller.ResourceUpdate.Field"
    end
    add_message "schema.v1.Controller.ResourceUpdate.Field" do
      optional :name, :string, 1
      optional :data_type, :message, 6, "schema.v1.DataType"
      repeated :children, :message, 7, "schema.v1.Controller.ResourceUpdate.Field"
      oneof :map_to do
        optional :query, :string, 2
        optional :params, :string, 3
        optional :body, :string, 4
        optional :value, :string, 5
      end
    end
    add_message "schema.v1.Controller.Authentication" do
      optional :table_name, :string, 1
    end
    add_message "schema.v1.Controller.Authorization" do
      optional :authorization_id, :int32, 1
      optional :table_name, :string, 2
    end
    add_message "schema.v1.Controller.AuthorizationGroup" do
      optional :table_name, :string, 1
      repeated :authorization_conditions, :message, 2, "schema.v1.Controller.AuthorizationCondition"
      optional :authentication_model, :bool, 3
    end
    add_message "schema.v1.Controller.AuthorizationCondition" do
      optional :column_definition_name, :string, 1
      optional :column_definition_display_name, :string, 2
      optional :joining_condition, :enum, 3, "schema.v1.Controller.AuthorizationCondition.JoiningCondition"
      optional :query, :enum, 4, "schema.v1.Controller.AuthorizationCondition.Query"
      optional :default_value, :string, 5
      optional :authentication_class, :string, 6
    end
    add_enum "schema.v1.Controller.AuthorizationCondition.Query" do
      value :EQUAL, 0
      value :IS_NOT_EQUAL, 1
      value :GREATER_THAN, 2
      value :LESS_THAN, 3
      value :GREATER_THAN_OR_EQUAL_TO, 4
      value :LESS_THAN_OR_EQUAL_TO, 5
    end
    add_enum "schema.v1.Controller.AuthorizationCondition.JoiningCondition" do
      value :AND_JOIN, 0
      value :OR_JOIN, 1
    end
    add_message "schema.v1.Table" do
      optional :name, :string, 1
      repeated :columns, :message, 2, "schema.v1.Table.Column"
      repeated :relations, :message, 3, "schema.v1.Table.Relation"
      repeated :indexes, :message, 4, "schema.v1.Table.Index"
    end
    add_message "schema.v1.Table.Column" do
      optional :name, :string, 1
      optional :type, :message, 2, "schema.v1.Table.Column.ColumnType"
      repeated :constraints, :message, 3, "schema.v1.Table.Constraint"
      proto3_optional :hidden, :bool, 4
      proto3_optional :column_validation, :message, 5, "schema.v1.Table.ColumnValidation"
    end
    add_message "schema.v1.Table.Column.ColumnType" do
      oneof :types do
        optional :integer_type, :message, 1, "schema.v1.Table.Column.IntegerType"
        optional :string_type, :message, 2, "schema.v1.Table.Column.StringType"
        optional :float_type, :message, 3, "schema.v1.Table.Column.FloatType"
        optional :boolean_type, :message, 4, "schema.v1.Table.Column.BooleanType"
        optional :date_type, :message, 5, "schema.v1.Table.Column.DateType"
        optional :file_type, :message, 6, "schema.v1.Table.Column.FileType"
        optional :enum_type, :message, 7, "schema.v1.Table.Column.EnumType"
        optional :counter_cache_type, :message, 8, "schema.v1.Table.Column.CounterCacheType"
        optional :id_type, :message, 9, "schema.v1.Table.Column.IDType"
      end
    end
    add_message "schema.v1.Table.Column.IDType" do
    end
    add_message "schema.v1.Table.Column.CounterCacheType" do
      optional :table_name, :string, 1
    end
    add_message "schema.v1.Table.Column.StringType" do
      proto3_optional :default_value, :string, 1
      optional :is_text, :bool, 2
      repeated :formats, :enum, 3, "schema.v1.Table.Column.StringType.Format"
      repeated :conditions, :message, 4, "schema.v1.Table.Column.StringType.Condition"
    end
    add_message "schema.v1.Table.Column.StringType.Condition" do
      optional :operator, :enum, 1, "schema.v1.Table.Column.Operator"
      oneof :operand do
        optional :value, :int32, 2
        optional :column_name, :string, 3
      end
    end
    add_enum "schema.v1.Table.Column.StringType.Format" do
      value :EMAIL, 0
      value :HIRAGANA, 1
      value :KATAKANA, 2
      value :PHONE_NUMBER, 3
      value :URL, 4
    end
    add_message "schema.v1.Table.Column.IntegerType" do
      proto3_optional :default_value, :int32, 1
      repeated :conditions, :message, 2, "schema.v1.Table.Column.IntegerType.Condition"
    end
    add_message "schema.v1.Table.Column.IntegerType.Condition" do
      optional :operator, :enum, 1, "schema.v1.Table.Column.Operator"
      oneof :operand do
        optional :value, :int32, 2
        optional :column_name, :string, 3
      end
    end
    add_message "schema.v1.Table.Column.FloatType" do
      proto3_optional :default_value, :float, 1
      repeated :conditions, :message, 2, "schema.v1.Table.Column.FloatType.Condition"
    end
    add_message "schema.v1.Table.Column.FloatType.Condition" do
      optional :operator, :enum, 1, "schema.v1.Table.Column.Operator"
      oneof :operand do
        optional :value, :float, 2
        optional :column_name, :string, 3
      end
    end
    add_message "schema.v1.Table.Column.BooleanType" do
      optional :default_value, :bool, 1
    end
    add_message "schema.v1.Table.Column.DateType" do
      optional :with_time, :bool, 1
      repeated :conditions, :enum, 2, "schema.v1.Table.Column.DateType.Condition"
    end
    add_enum "schema.v1.Table.Column.DateType.Condition" do
      value :IN_PAST, 0
      value :IN_FUTURE, 1
    end
    add_message "schema.v1.Table.Column.FileType" do
      optional :maximum_size, :int32, 1
      optional :number_of_files, :message, 2, "schema.v1.Table.Column.FileType.NumberOfFiles"
      repeated :content_types, :enum, 3, "schema.v1.Table.Column.FileType.ContentType"
      optional :multiple, :bool, 4
    end
    add_message "schema.v1.Table.Column.FileType.NumberOfFiles" do
      optional :minimum, :int32, 1
      optional :maximum, :int32, 2
    end
    add_enum "schema.v1.Table.Column.FileType.ContentType" do
      value :IMAGE, 0
      value :VIDEO, 1
      value :AUDIO, 2
      value :CSV, 3
      value :PDF, 4
      value :JSON, 5
    end
    add_message "schema.v1.Table.Column.EnumType" do
      optional :default_value, :string, 1
      repeated :values, :string, 2
    end
    add_enum "schema.v1.Table.Column.Operator" do
      value :GREATER_THAN, 0
      value :GREATER_THAN_OR_EQUAL, 1
      value :EQUAL, 2
      value :LESS_THAN, 3
      value :LESS_THAN_OR_EQUAL, 4
      value :NOT_EQUAL, 5
    end
    add_message "schema.v1.Table.ColumnValidation" do
      repeated :column_validation_options, :message, 1, "schema.v1.Table.ColumnValidationOption"
      optional :presence, :bool, 2
      optional :uniqueness, :bool, 3
      optional :allow_nil, :bool, 4
    end
    add_message "schema.v1.Table.ColumnValidationOption" do
      oneof :validation_type do
        optional :length_validation, :message, 1, "schema.v1.Table.ColumnValidationOption.LengthValidation"
        optional :char_validation, :message, 2, "schema.v1.Table.ColumnValidationOption.CharValidation"
        optional :date_validation, :message, 3, "schema.v1.Table.ColumnValidationOption.DateValidation"
        optional :date_time_validation, :message, 4, "schema.v1.Table.ColumnValidationOption.DateValidation"
        optional :numericality_validation, :message, 5, "schema.v1.Table.ColumnValidationOption.NumericalityValidation"
        optional :file_validation, :message, 6, "schema.v1.Table.ColumnValidationOption.FileValidation"
      end
    end
    add_message "schema.v1.Table.ColumnValidationOption.LengthValidation" do
      optional :maximum, :int32, 1
      optional :minimum, :int32, 2
      optional :is, :int32, 3
    end
    add_message "schema.v1.Table.ColumnValidationOption.CharValidation" do
      optional :email, :bool, 1
      optional :hiragana, :bool, 2
      optional :katakana, :bool, 3
      optional :phone_number, :bool, 4
      optional :url, :bool, 5
    end
    add_message "schema.v1.Table.ColumnValidationOption.DateValidation" do
      optional :past, :bool, 1
      optional :future, :bool, 2
    end
    add_message "schema.v1.Table.ColumnValidationOption.NumericalityValidation" do
      optional :greater_than, :float, 1
      optional :greater_than_or_equal_to, :float, 2
      optional :less_than, :float, 3
      optional :less_than_or_equal_to, :float, 4
    end
    add_message "schema.v1.Table.ColumnValidationOption.FileValidation" do
      optional :single, :bool, 1
      repeated :content_types, :string, 2
    end
    add_message "schema.v1.Table.Constraint" do
      oneof :relation_key do
        optional :primary_key, :message, 1, "schema.v1.Table.Constraint.PrimaryKey"
        optional :foreign_key, :message, 2, "schema.v1.Table.Constraint.ForeignKey"
        optional :not_null, :message, 3, "schema.v1.Table.Constraint.NotNull"
        optional :unique, :message, 4, "schema.v1.Table.Constraint.Unique"
      end
    end
    add_message "schema.v1.Table.Constraint.PrimaryKey" do
    end
    add_message "schema.v1.Table.Constraint.ForeignKey" do
      optional :table_name, :string, 1
      optional :primary_key, :string, 2
    end
    add_message "schema.v1.Table.Constraint.NotNull" do
    end
    add_message "schema.v1.Table.Constraint.Unique" do
    end
    add_message "schema.v1.Table.Index" do
      optional :name, :string, 1
      optional :unique, :bool, 2
      repeated :columns, :string, 3
    end
    add_message "schema.v1.Table.Relation" do
      oneof :relation_type do
        optional :has_one, :message, 1, "schema.v1.Table.Relation.RelationHasOne"
        optional :belong_to, :message, 2, "schema.v1.Table.Relation.RelationBelongTo"
        optional :one_many, :message, 3, "schema.v1.Table.Relation.RelationOneMany"
        optional :many_one, :message, 4, "schema.v1.Table.Relation.RelationManyOne"
        optional :many_many, :message, 5, "schema.v1.Table.Relation.RelationManyMany"
      end
    end
    add_message "schema.v1.Table.Relation.RelationHasOne" do
      optional :table_name, :string, 1
      optional :column_name, :string, 2
    end
    add_message "schema.v1.Table.Relation.RelationBelongTo" do
      optional :table_name, :string, 1
      optional :column_name, :string, 2
    end
    add_message "schema.v1.Table.Relation.RelationManyOne" do
      optional :table_name, :string, 1
      optional :column_name, :string, 2
    end
    add_message "schema.v1.Table.Relation.RelationOneMany" do
      optional :table_name, :string, 1
      optional :column_name, :string, 2
    end
    add_message "schema.v1.Table.Relation.RelationManyMany" do
      optional :table_name, :string, 1
      optional :joined_name, :string, 2
    end
    add_message "schema.v1.Migration" do
      optional :migration_id, :string, 1
      repeated :changes, :message, 2, "schema.v1.MigrationChange"
    end
    add_message "schema.v1.MigrationChange" do
      oneof :methods do
        optional :create_table, :message, 1, "schema.v1.CreateTable"
        optional :change_table_name, :message, 2, "schema.v1.ChangeTableName"
        optional :change_table_comment, :message, 3, "schema.v1.ChangeTableComment"
        optional :add_column, :message, 4, "schema.v1.AddColumn"
        optional :rename_column, :message, 5, "schema.v1.RenameColumn"
        optional :change_column_comment, :message, 6, "schema.v1.ChangeColumnComment"
        optional :change_column, :message, 7, "schema.v1.ChangeColumn"
        optional :change_column_default, :message, 8, "schema.v1.ChangeColumnDefault"
        optional :change_column_null, :message, 9, "schema.v1.ChangeColumnNull"
        optional :remove_table_index, :message, 10, "schema.v1.RemoveTableIndex"
        optional :remove_table_relation, :message, 11, "schema.v1.RemoveTableRelation"
        optional :create_table_relation, :message, 12, "schema.v1.CreateTableRelation"
        optional :remove_column, :message, 13, "schema.v1.RemoveColumn"
        optional :drop_table, :message, 14, "schema.v1.DropTable"
        optional :change_table_index, :message, 15, "schema.v1.ChangeTableIndex"
        optional :create_table_index, :message, 16, "schema.v1.CreateTableIndex"
        optional :add_uniq_column, :message, 17, "schema.v1.AddUniqColumn"
        optional :change_column_unique, :message, 18, "schema.v1.ChangeColumnUnique"
      end
    end
    add_message "schema.v1.CreateTable" do
      optional :key, :string, 1
      optional :change_to, :message, 2, "schema.v1.CreateTableChange"
      optional :prev_uuid, :string, 3
      optional :next_uuid, :string, 4
      optional :next_record, :message, 5, "schema.v1.CreateTableNextRecord"
    end
    add_message "schema.v1.ChangeTableName" do
      optional :key, :string, 1
      optional :change_from, :string, 2
      optional :change_to, :string, 3
      optional :prev_uuid, :string, 4
      optional :next_uuid, :string, 5
      optional :prev_record, :message, 6, "schema.v1.CreateTableNextRecord"
      optional :next_record, :message, 7, "schema.v1.CreateTableNextRecord"
    end
    add_message "schema.v1.ChangeTableComment" do
      optional :key, :string, 1
      optional :change_from, :string, 2
      optional :change_to, :string, 3
      optional :prev_uuid, :string, 4
      optional :next_uuid, :string, 5
      optional :prev_record, :message, 6, "schema.v1.CreateTableNextRecord"
      optional :next_record, :message, 7, "schema.v1.CreateTableNextRecord"
    end
    add_message "schema.v1.CreateTableChange" do
      optional :name, :string, 1
      optional :uuid, :string, 2
      proto3_optional :comment, :string, 3
    end
    add_message "schema.v1.AddColumn" do
      optional :key, :string, 1
      optional :change_to, :message, 2, "schema.v1.MigrationColumnDefinition"
      optional :prev_uuid, :string, 3
      optional :next_uuid, :string, 4
      optional :next_record, :message, 5, "schema.v1.MigrationColumnDefinition"
    end
    add_message "schema.v1.RenameColumn" do
      optional :key, :string, 1
      optional :change_from, :string, 2
      optional :change_to, :string, 3
      optional :prev_uuid, :string, 4
      optional :next_uuid, :string, 5
      optional :prev_record, :message, 6, "schema.v1.MigrationColumnDefinition"
      optional :next_record, :message, 7, "schema.v1.MigrationColumnDefinition"
    end
    add_message "schema.v1.ChangeColumnComment" do
      optional :key, :string, 1
      optional :change_from, :string, 2
      optional :change_to, :string, 3
      optional :prev_uuid, :string, 4
      optional :next_uuid, :string, 5
      optional :prev_record, :message, 6, "schema.v1.MigrationColumnDefinition"
      optional :next_record, :message, 7, "schema.v1.MigrationColumnDefinition"
    end
    add_message "schema.v1.ChangeColumn" do
      optional :key, :string, 1
      optional :change_from, :string, 2
      optional :change_to, :string, 3
      optional :prev_uuid, :string, 4
      optional :next_uuid, :string, 5
      optional :prev_record, :message, 6, "schema.v1.MigrationColumnDefinition"
      optional :next_record, :message, 7, "schema.v1.MigrationColumnDefinition"
    end
    add_message "schema.v1.ChangeColumnDefault" do
      optional :key, :string, 1
      optional :change_from, :string, 2
      optional :change_to, :string, 3
      optional :prev_uuid, :string, 4
      optional :next_uuid, :string, 5
      optional :prev_record, :message, 6, "schema.v1.MigrationColumnDefinition"
      optional :next_record, :message, 7, "schema.v1.MigrationColumnDefinition"
    end
    add_message "schema.v1.ChangeColumnNull" do
      optional :key, :string, 1
      optional :change_from, :string, 2
      optional :change_to, :string, 3
      optional :prev_uuid, :string, 4
      optional :next_uuid, :string, 5
      optional :prev_record, :message, 6, "schema.v1.MigrationColumnDefinition"
      optional :next_record, :message, 7, "schema.v1.MigrationColumnDefinition"
    end
    add_message "schema.v1.RemoveTableIndex" do
      optional :key, :string, 1
      optional :change_from, :message, 2, "schema.v1.TableIndexMigration"
      optional :prev_uuid, :string, 3
      optional :next_uuid, :string, 4
      optional :prev_record, :message, 5, "schema.v1.TableIndexMigration"
    end
    add_message "schema.v1.RemoveTableRelation" do
      optional :key, :string, 1
      optional :prev_uuid, :string, 3
      optional :next_uuid, :string, 4
      optional :prev_record, :message, 5, "schema.v1.TableRelationMigration"
    end
    add_message "schema.v1.CreateTableRelation" do
      optional :key, :string, 1
      optional :change_to, :message, 2, "schema.v1.TableRelationMigration"
      optional :prev_uuid, :string, 4
      optional :next_uuid, :string, 5
      optional :next_record, :message, 6, "schema.v1.TableRelationMigration"
    end
    add_message "schema.v1.RemoveColumn" do
      optional :key, :string, 1
      optional :change_from, :message, 2, "schema.v1.MigrationColumnDefinition"
      optional :prev_uuid, :string, 4
      optional :next_uuid, :string, 5
      optional :prev_record, :message, 6, "schema.v1.MigrationColumnDefinition"
    end
    add_message "schema.v1.DropTable" do
      optional :key, :string, 1
      optional :change_from, :message, 2, "schema.v1.CreateTableNextRecord"
      optional :prev_uuid, :string, 4
      optional :next_uuid, :string, 5
      optional :prev_record, :message, 6, "schema.v1.CreateTableNextRecord"
    end
    add_message "schema.v1.ChangeTableIndex" do
      optional :key, :string, 1
      optional :change_from, :string, 2
      optional :change_to, :string, 3
      optional :prev_uuid, :string, 4
      optional :next_uuid, :string, 5
      optional :prev_record, :message, 6, "schema.v1.TableIndexMigration"
      optional :next_record, :message, 7, "schema.v1.TableIndexMigration"
    end
    add_message "schema.v1.CreateTableIndex" do
      optional :key, :string, 1
      optional :change_to, :message, 2, "schema.v1.TableIndexMigration"
      optional :next_uuid, :string, 5
      optional :next_record, :message, 7, "schema.v1.TableIndexMigration"
    end
    add_message "schema.v1.AddUniqColumn" do
      optional :next_record, :message, 7, "schema.v1.MigrationColumnDefinition"
    end
    add_message "schema.v1.ChangeColumnUnique" do
      optional :key, :string, 1
      optional :change_from, :bool, 2
      optional :change_to, :bool, 3
      optional :prev_uuid, :string, 4
      optional :next_uuid, :string, 5
      optional :prev_record, :message, 6, "schema.v1.MigrationColumnDefinition"
      optional :next_record, :message, 7, "schema.v1.MigrationColumnDefinition"
    end
    add_message "schema.v1.CreateTableNextRecord" do
      optional :name, :string, 1
      optional :uuid, :string, 2
      optional :comment, :string, 3
      repeated :column_definitions, :message, 4, "schema.v1.MigrationColumnDefinition"
    end
    add_message "schema.v1.MigrationColumnDefinition" do
      optional :name, :string, 1
      optional :column_type, :string, 2
      optional :required, :bool, 3
      optional :unique, :bool, 4
      optional :default_value, :string, 5
      optional :comment, :string, 6
      optional :uuid, :string, 7
      optional :table_definition_uuid, :string, 8
      proto3_optional :custom_foreign_key, :bool, 9
      proto3_optional :table_definition, :message, 10, "schema.v1.TableMetaDataMigration"
      optional :id, :int32, 11
    end
    add_message "schema.v1.TableMetaDataMigration" do
      optional :name, :string, 1
      optional :uuid, :string, 2
    end
    add_message "schema.v1.TableIndexMigration" do
      optional :name, :string, 1
      optional :unique, :bool, 2
      optional :uuid, :string, 3
      optional :table_definition_uuid, :string, 4
      repeated :column_definitions, :message, 5, "schema.v1.MigrationColumnDefinition"
      optional :single_index, :bool, 6
      proto3_optional :table_definition, :message, 7, "schema.v1.TableMetaDataMigration"
      optional :id, :int32, 8
    end
    add_message "schema.v1.TableRelationMigration" do
      optional :foreign_key, :string, 1
      optional :relation_type, :string, 2
      optional :required, :bool, 3
      optional :uuid, :string, 4
      optional :table_definition_uuid, :string, 5
      optional :related_table_uuid, :string, 6
      proto3_optional :custom_foreign_key, :bool, 7
      optional :table_definition, :message, 8, "schema.v1.CreateTableChange"
      optional :related_table, :message, 9, "schema.v1.CreateTableChange"
      optional :id, :int32, 10
    end
    add_enum "schema.v1.DataTypeName" do
      value :BOOLEAN, 0
      value :INTEGER, 1
      value :FLOAT, 2
      value :STRING, 3
      value :TEXT, 4
      value :DATE, 5
      value :DATETIME, 6
      value :ARRAY, 7
      value :OBJECT, 8
      value :PAGE_SIZE, 9
      value :PAGE_NUMBER, 10
      value :FILE, 11
      value :TABLE, 12
      value :ENUM, 13
      value :CURRENT_USER, 14
      value :COUNTER_CACHE, 15
      value :ID, 16
    end
    add_enum "schema.v1.Operator" do
      value :WHERE, 0
      value :PAGINATION, 1
      value :ORDER, 2
      value :ORDER_ASC, 3
      value :ORDER_DESC, 4
      value :JOIN_AND, 5
      value :JOIN_OR, 6
      value :EQUAL, 7
      value :START_WITH, 8
      value :END_WITH, 9
      value :CONTAIN, 10
      value :NOT_EQUAL, 11
      value :GREATER_THAN, 12
      value :LESS_THAN, 13
      value :GREATER_OR_EQUAL_THAN, 14
      value :LESS_OR_EQUAL_THAN, 15
      value :WHERE_AND, 16
      value :WHERE_OR, 17
    end
  end
end

module Schema
  module V1
    Backend = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Backend").msgclass
    Localization = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Localization").msgclass
    Localization::Namespace = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Localization.Namespace").msgclass
    Localization::Translate = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Localization.Translate").msgclass
    DataType = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.DataType").msgclass
    Authorization = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Authorization").msgclass
    Authorization::Policy = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Authorization.Policy").msgclass
    Authorization::Policy::RoleBinding = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Authorization.Policy.RoleBinding").msgclass
    Authorization::Policy::Rule = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Authorization.Policy.Rule").msgclass
    Authorization::Policy::Rule::Operand = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Authorization.Policy.Rule.Operand").msgclass
    Authorization::Policy::Rule::Expr = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Authorization.Policy.Rule.Expr").msgclass
    Authorization::Policy::Scope = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Authorization.Policy.Scope").enummodule
    Feature = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Feature").msgclass
    Feature::EmailLogin = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Feature.EmailLogin").msgclass
    Feature::EmailLogin::UnlockStrategy = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Feature.EmailLogin.UnlockStrategy").enummodule
    Feature::JPBankData = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Feature.JPBankData").msgclass
    Feature::BasicAuth = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Feature.BasicAuth").msgclass
    Feature::TwilioLogin = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Feature.TwilioLogin").msgclass
    Feature::Rollbar = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Feature.Rollbar").msgclass
    Feature::DeepLink = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Feature.DeepLink").msgclass
    Feature::Stripe = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Feature.Stripe").msgclass
    Feature::LineLogin = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Feature.LineLogin").msgclass
    Feature::GoogleAnalytics = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Feature.GoogleAnalytics").msgclass
    Feature::GoogleTagManager = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Feature.GoogleTagManager").msgclass
    Feature::ScoutApm = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Feature.ScoutApm").msgclass
    Feature::EmailConfig = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Feature.EmailConfig").msgclass
    Feature::FeatureName = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Feature.FeatureName").enummodule
    Feature::Environment = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Feature.Environment").enummodule
    Controller = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Controller").msgclass
    Controller::Endpoint = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Controller.Endpoint").msgclass
    Controller::Endpoint::List = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Controller.Endpoint.List").msgclass
    Controller::Endpoint::Get = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Controller.Endpoint.Get").msgclass
    Controller::Endpoint::Create = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Controller.Endpoint.Create").msgclass
    Controller::Endpoint::Update = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Controller.Endpoint.Update").msgclass
    Controller::Endpoint::Delete = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Controller.Endpoint.Delete").msgclass
    Controller::RequestContent = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Controller.RequestContent").msgclass
    Controller::RequestContent::Field = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Controller.RequestContent.Field").msgclass
    Controller::Response = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Controller.Response").msgclass
    Controller::Response::Field = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Controller.Response.Field").msgclass
    Controller::ResourceCondition = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Controller.ResourceCondition").msgclass
    Controller::ResourceCondition::Operand = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Controller.ResourceCondition.Operand").msgclass
    Controller::ResourceCondition::Expr = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Controller.ResourceCondition.Expr").msgclass
    Controller::ResourceCondition::System = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Controller.ResourceCondition.System").enummodule
    Controller::ResourceUpdate = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Controller.ResourceUpdate").msgclass
    Controller::ResourceUpdate::Field = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Controller.ResourceUpdate.Field").msgclass
    Controller::Authentication = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Controller.Authentication").msgclass
    Controller::Authorization = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Controller.Authorization").msgclass
    Controller::AuthorizationGroup = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Controller.AuthorizationGroup").msgclass
    Controller::AuthorizationCondition = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Controller.AuthorizationCondition").msgclass
    Controller::AuthorizationCondition::Query = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Controller.AuthorizationCondition.Query").enummodule
    Controller::AuthorizationCondition::JoiningCondition = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Controller.AuthorizationCondition.JoiningCondition").enummodule
    Table = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Table").msgclass
    Table::Column = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Table.Column").msgclass
    Table::Column::ColumnType = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Table.Column.ColumnType").msgclass
    Table::Column::IDType = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Table.Column.IDType").msgclass
    Table::Column::CounterCacheType = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Table.Column.CounterCacheType").msgclass
    Table::Column::StringType = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Table.Column.StringType").msgclass
    Table::Column::StringType::Condition = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Table.Column.StringType.Condition").msgclass
    Table::Column::StringType::Format = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Table.Column.StringType.Format").enummodule
    Table::Column::IntegerType = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Table.Column.IntegerType").msgclass
    Table::Column::IntegerType::Condition = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Table.Column.IntegerType.Condition").msgclass
    Table::Column::FloatType = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Table.Column.FloatType").msgclass
    Table::Column::FloatType::Condition = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Table.Column.FloatType.Condition").msgclass
    Table::Column::BooleanType = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Table.Column.BooleanType").msgclass
    Table::Column::DateType = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Table.Column.DateType").msgclass
    Table::Column::DateType::Condition = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Table.Column.DateType.Condition").enummodule
    Table::Column::FileType = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Table.Column.FileType").msgclass
    Table::Column::FileType::NumberOfFiles = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Table.Column.FileType.NumberOfFiles").msgclass
    Table::Column::FileType::ContentType = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Table.Column.FileType.ContentType").enummodule
    Table::Column::EnumType = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Table.Column.EnumType").msgclass
    Table::Column::Operator = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Table.Column.Operator").enummodule
    Table::ColumnValidation = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Table.ColumnValidation").msgclass
    Table::ColumnValidationOption = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Table.ColumnValidationOption").msgclass
    Table::ColumnValidationOption::LengthValidation = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Table.ColumnValidationOption.LengthValidation").msgclass
    Table::ColumnValidationOption::CharValidation = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Table.ColumnValidationOption.CharValidation").msgclass
    Table::ColumnValidationOption::DateValidation = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Table.ColumnValidationOption.DateValidation").msgclass
    Table::ColumnValidationOption::NumericalityValidation = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Table.ColumnValidationOption.NumericalityValidation").msgclass
    Table::ColumnValidationOption::FileValidation = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Table.ColumnValidationOption.FileValidation").msgclass
    Table::Constraint = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Table.Constraint").msgclass
    Table::Constraint::PrimaryKey = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Table.Constraint.PrimaryKey").msgclass
    Table::Constraint::ForeignKey = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Table.Constraint.ForeignKey").msgclass
    Table::Constraint::NotNull = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Table.Constraint.NotNull").msgclass
    Table::Constraint::Unique = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Table.Constraint.Unique").msgclass
    Table::Index = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Table.Index").msgclass
    Table::Relation = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Table.Relation").msgclass
    Table::Relation::RelationHasOne = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Table.Relation.RelationHasOne").msgclass
    Table::Relation::RelationBelongTo = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Table.Relation.RelationBelongTo").msgclass
    Table::Relation::RelationManyOne = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Table.Relation.RelationManyOne").msgclass
    Table::Relation::RelationOneMany = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Table.Relation.RelationOneMany").msgclass
    Table::Relation::RelationManyMany = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Table.Relation.RelationManyMany").msgclass
    Migration = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Migration").msgclass
    MigrationChange = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.MigrationChange").msgclass
    CreateTable = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.CreateTable").msgclass
    ChangeTableName = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.ChangeTableName").msgclass
    ChangeTableComment = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.ChangeTableComment").msgclass
    CreateTableChange = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.CreateTableChange").msgclass
    AddColumn = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.AddColumn").msgclass
    RenameColumn = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.RenameColumn").msgclass
    ChangeColumnComment = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.ChangeColumnComment").msgclass
    ChangeColumn = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.ChangeColumn").msgclass
    ChangeColumnDefault = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.ChangeColumnDefault").msgclass
    ChangeColumnNull = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.ChangeColumnNull").msgclass
    RemoveTableIndex = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.RemoveTableIndex").msgclass
    RemoveTableRelation = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.RemoveTableRelation").msgclass
    CreateTableRelation = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.CreateTableRelation").msgclass
    RemoveColumn = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.RemoveColumn").msgclass
    DropTable = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.DropTable").msgclass
    ChangeTableIndex = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.ChangeTableIndex").msgclass
    CreateTableIndex = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.CreateTableIndex").msgclass
    AddUniqColumn = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.AddUniqColumn").msgclass
    ChangeColumnUnique = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.ChangeColumnUnique").msgclass
    CreateTableNextRecord = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.CreateTableNextRecord").msgclass
    MigrationColumnDefinition = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.MigrationColumnDefinition").msgclass
    TableMetaDataMigration = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.TableMetaDataMigration").msgclass
    TableIndexMigration = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.TableIndexMigration").msgclass
    TableRelationMigration = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.TableRelationMigration").msgclass
    DataTypeName = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.DataTypeName").enummodule
    Operator = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v1.Operator").enummodule
  end
end
