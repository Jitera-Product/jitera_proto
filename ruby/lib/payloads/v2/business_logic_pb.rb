# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: v2/business_logic.proto

require 'google/protobuf'


descriptor_data = "\n\x17v2/business_logic.proto\x12\tschema.v2\"\x81\x01\n\x15\x42usinessLogicResponse\x12!\n\x19project_generate_queue_id\x18\x01 \x01(\x05\x12\x12\n\nproject_id\x18\x02 \x01(\x05\x12\x31\n\x0f\x62usiness_logics\x18\x03 \x03(\x0b\x32\x18.schema.v2.BusinessLogic\"\xa0\x02\n\rBusinessLogic\x12\x0f\n\x07node_id\x18\x01 \x01(\t\x12\x12\n\nblock_type\x18\x02 \x01(\t\x12\x31\n\x07\x63ontent\x18\x03 \x03(\x0b\x32 .schema.v2.BusinessLogic.Content\x12\x35\n\nproperties\x18\x04 \x01(\x0b\x32!.schema.v2.BusinessLogic.Property\x12\x12\n\nproject_id\x18\x05 \x01(\x05\x12\x10\n\x08\x63hildren\x18\x06 \x03(\t\x1a&\n\x07\x43ontent\x12\x0c\n\x04type\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t\x1a\x32\n\x08Property\x12\x10\n\x08\x63\x61tegory\x18\x01 \x01(\t\x12\x14\n\x0cuser_case_id\x18\x02 \x01(\x05\x62\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool

begin
  pool.add_serialized_file(descriptor_data)
rescue TypeError => e
  # Compatibility code: will be removed in the next major version.
  require 'google/protobuf/descriptor_pb'
  parsed = Google::Protobuf::FileDescriptorProto.decode(descriptor_data)
  parsed.clear_dependency
  serialized = parsed.class.encode(parsed)
  file = pool.add_serialized_file(serialized)
  warn "Warning: Protobuf detected an import path issue while loading generated file #{__FILE__}"
  imports = [
  ]
  imports.each do |type_name, expected_filename|
    import_file = pool.lookup(type_name).file_descriptor
    if import_file.name != expected_filename
      warn "- #{file.name} imports #{expected_filename}, but that import was loaded as #{import_file.name}"
    end
  end
  warn "Each proto file must use a consistent fully-qualified name."
  warn "This will become an error in the next major version."
end

module Schema
  module V2
    BusinessLogicResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v2.BusinessLogicResponse").msgclass
    BusinessLogic = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v2.BusinessLogic").msgclass
    BusinessLogic::Content = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v2.BusinessLogic.Content").msgclass
    BusinessLogic::Property = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v2.BusinessLogic.Property").msgclass
  end
end
