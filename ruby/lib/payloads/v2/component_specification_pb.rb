# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: v2/component_specification.proto

require 'google/protobuf'


descriptor_data = "\n v2/component_specification.proto\x12\tschema.v2\"\xd8\x01\n\x16\x43omponentSpecification\x12\x0c\n\x04type\x18\x01 \x01(\t\x12\x13\n\x0b\x64\x65scription\x18\x02 \x01(\t\x12\x13\n\x0b\x66igmaNodeId\x18\x03 \x01(\t\x12\x42\n\x0b\x62oundingBox\x18\x04 \x03(\x0b\x32-.schema.v2.ComponentSpecification.BoundingBox\x1a\x42\n\x0b\x42oundingBox\x12\t\n\x01x\x18\x01 \x01(\x02\x12\t\n\x01y\x18\x02 \x01(\x02\x12\r\n\x05width\x18\x03 \x01(\x02\x12\x0e\n\x06height\x18\x04 \x01(\x02\x62\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool

begin
  pool.add_serialized_file(descriptor_data)
rescue TypeError => e
  # Compatibility code: will be removed in the next major version.
  require 'google/protobuf/descriptor_pb'
  parsed = Google::Protobuf::FileDescriptorProto.decode(descriptor_data)
  parsed.clear_dependency
  serialized = parsed.class.encode(parsed)
  file = pool.add_serialized_file(serialized)
  warn "Warning: Protobuf detected an import path issue while loading generated file #{__FILE__}"
  imports = [
  ]
  imports.each do |type_name, expected_filename|
    import_file = pool.lookup(type_name).file_descriptor
    if import_file.name != expected_filename
      warn "- #{file.name} imports #{expected_filename}, but that import was loaded as #{import_file.name}"
    end
  end
  warn "Each proto file must use a consistent fully-qualified name."
  warn "This will become an error in the next major version."
end

module Schema
  module V2
    ComponentSpecification = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v2.ComponentSpecification").msgclass
    ComponentSpecification::BoundingBox = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v2.ComponentSpecification.BoundingBox").msgclass
  end
end
