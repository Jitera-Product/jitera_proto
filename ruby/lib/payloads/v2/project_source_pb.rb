# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: v2/project_source.proto

require 'google/protobuf'

require 'google/protobuf/struct_pb'
require 'v1/payloads_pb'

Google::Protobuf::DescriptorPool.generated_pool.build do
  add_file("v2/project_source.proto", :syntax => :proto3) do
    add_message "schema.v2.ProjectSource" do
      optional :id, :int32, 1
      optional :project_id, :int32, 2
      optional :framework, :enum, 3, "schema.v2.ProjectSource.Framework"
      optional :layer, :enum, 4, "schema.v2.ProjectSource.Layer"
      optional :files, :string, 5
    end
    add_message "schema.v2.ProjectSource.Table" do
      optional :id, :int32, 1
      optional :name, :string, 2
      repeated :columns, :message, 3, "schema.v2.ProjectSource.Table.Column"
    end
    add_message "schema.v2.ProjectSource.Table.Column" do
      optional :id, :int32, 1
      optional :name, :string, 2
      optional :type, :string, 3
    end
    add_message "schema.v2.ProjectSource.Relation" do
      optional :id, :int32, 1
      optional :column, :string, 2
      optional :table, :string, 3
      optional :related_table, :string, 4
      optional :type, :string, 5
    end
    add_enum "schema.v2.ProjectSource.Framework" do
      value :FRAMEWORK_UNSPECIFIED, 0
      value :NEXTJS, 1
      value :VITE, 2
      value :NUXTJS, 3
      value :NESTJS, 4
      value :ROR, 5
      value :LARAVEL, 6
    end
    add_enum "schema.v2.ProjectSource.Layer" do
      value :LAYER_UNSPECIFIED, 0
      value :BACKEND, 1
      value :FRONTEND, 2
      value :MOBILE, 3
    end
    add_message "schema.v2.Git" do
      optional :repo, :string, 3
      optional :owner, :string, 4
      optional :branch, :string, 5
      optional :token, :string, 6
      optional :jitera_branch, :string, 7
    end
    add_message "schema.v2.ProjectSourceCreation" do
      optional :project_generate_queue_id, :int32, 1
      optional :project_source, :message, 2, "schema.v2.ProjectSource"
      proto3_optional :import_by, :enum, 5, "schema.v2.ImportBy"
      proto3_optional :action, :enum, 6, "schema.v2.ProjectSourceCreation.Action"
      oneof :source do
        optional :source_path, :string, 3
        optional :git, :message, 4, "schema.v2.Git"
      end
    end
    add_enum "schema.v2.ProjectSourceCreation.Action" do
      value :INDEX_CODE, 0
      value :ANALYZE_CODE, 1
      value :CODE_TO_ERD, 2
    end
    add_message "schema.v2.ERDConfig" do
      optional :project_generate_queue_id, :int32, 1
      optional :project_source, :message, 2, "schema.v2.ProjectSource"
      optional :git, :message, 3, "schema.v2.Git"
      proto3_optional :import_by, :enum, 6, "schema.v2.ImportBy"
      oneof :source do
        optional :import, :message, 4, "schema.v2.ERDConfig.Import"
        optional :local, :message, 5, "schema.v2.ERDConfig.Local"
      end
    end
    add_message "schema.v2.ERDConfig.Local" do
      optional :source_path, :string, 1
      repeated :tables, :message, 2, "schema.v1.Table"
    end
    add_message "schema.v2.ERDConfig.Import" do
      repeated :tables, :message, 2, "schema.v2.ERDConfig.TableChanged"
    end
    add_message "schema.v2.ERDConfig.TableChanged" do
      optional :type, :enum, 1, "schema.v2.ERDConfig.TableChangedType"
      optional :table, :message, 2, "schema.v1.Table"
    end
    add_enum "schema.v2.ERDConfig.TableChangedType" do
      value :TABLECHANGEDTYPE_UNSPECIFIED, 0
      value :ADDED, 1
      value :UPDATED, 2
      value :DELETED, 3
    end
    add_message "schema.v2.BusinessLogicChanges" do
      optional :project_generate_queue_id, :int32, 1
      repeated :tables, :message, 2, "schema.v2.ProjectSource.Table"
      repeated :relations, :message, 3, "schema.v2.ProjectSource.Relation"
      optional :project_source, :message, 4, "schema.v2.ProjectSource"
      optional :block_diff, :message, 5, "schema.v2.BlockDiff"
      optional :git, :message, 6, "schema.v2.Git"
      proto3_optional :import_by, :enum, 7, "schema.v2.ImportBy"
    end
    add_message "schema.v2.BlockDiff" do
      optional :project_id, :int32, 1
      optional :id, :int32, 3
      optional :node_id, :string, 4
      optional :content, :message, 5, "schema.v2.BlockDiff.BlockBody"
      repeated :blocks, :message, 6, "schema.v2.BlockDiff.Block"
    end
    add_message "schema.v2.BlockDiff.Block" do
      optional :id, :int32, 1
      optional :node_id, :string, 2
      oneof :state do
        optional :addition, :message, 3, "schema.v2.BlockDiff.Block.Addition"
        optional :modification, :message, 4, "schema.v2.BlockDiff.Block.Modification"
        optional :deletion, :message, 5, "schema.v2.BlockDiff.Block.Deletion"
      end
    end
    add_message "schema.v2.BlockDiff.Block.Addition" do
      optional :content, :message, 1, "schema.v2.BlockDiff.BlockBody"
    end
    add_message "schema.v2.BlockDiff.Block.Modification" do
      optional :deletion, :message, 1, "schema.v2.BlockDiff.BlockBody"
      optional :addition, :message, 2, "schema.v2.BlockDiff.BlockBody"
    end
    add_message "schema.v2.BlockDiff.Block.Deletion" do
      optional :content, :message, 1, "schema.v2.BlockDiff.BlockBody"
    end
    add_message "schema.v2.BlockDiff.BlockBody" do
      optional :name, :string, 1
      optional :block_type, :string, 2
      optional :parent_node_id, :string, 3
      repeated :content, :message, 4, "google.protobuf.Struct"
      optional :properties, :message, 5, "google.protobuf.Struct"
      repeated :children, :string, 6
    end
    add_message "schema.v2.ApiChanges" do
      optional :project_source, :message, 1, "schema.v2.ProjectSource"
      optional :block_diff, :message, 2, "schema.v2.BlockDiff"
      repeated :tables, :message, 3, "schema.v2.ProjectSource.Table"
      repeated :relations, :message, 4, "schema.v2.ProjectSource.Relation"
      optional :project_generate_queue_id, :int32, 5
      optional :git, :message, 6, "schema.v2.Git"
      proto3_optional :import_by, :enum, 7, "schema.v2.ImportBy"
    end
    add_message "schema.v2.ProjectSourceReport" do
      optional :project_generate_queue_id, :int32, 1
      optional :project_id, :int32, 2
      optional :project_source_id, :int32, 3
      optional :token_usage, :int32, 4
      oneof :state do
        optional :progress, :message, 5, "schema.v2.ProjectSourceReport.Progress"
        optional :complete, :message, 6, "schema.v2.ProjectSourceReport.Complete"
        optional :error, :message, 7, "schema.v2.ProjectSourceReport.Error"
      end
    end
    add_message "schema.v2.ProjectSourceReport.Progress" do
      optional :percentage, :int32, 1
      optional :message, :string, 2
      optional :payload, :string, 3
    end
    add_message "schema.v2.ProjectSourceReport.Error" do
      optional :message, :string, 1
    end
    add_message "schema.v2.ProjectSourceReport.Complete" do
      optional :files, :string, 4
    end
    add_message "schema.v2.UseCaseRemoval" do
      optional :project_source, :message, 1, "schema.v2.ProjectSource"
      optional :project_generate_queue_id, :int32, 2
      optional :git, :message, 3, "schema.v2.Git"
      proto3_optional :import_by, :enum, 4, "schema.v2.ImportBy"
      repeated :use_case_blocks, :message, 5, "schema.v2.UseCaseRemoval.Block"
      repeated :business_logic_blocks, :message, 6, "schema.v2.UseCaseRemoval.Block"
      repeated :api_blocks, :message, 7, "schema.v2.UseCaseRemoval.Block"
    end
    add_message "schema.v2.UseCaseRemoval.Block" do
      optional :id, :int32, 1
      optional :node_id, :string, 2
      optional :name, :string, 3
      optional :block_type, :string, 4
      optional :parent_node_id, :string, 5
      optional :properties, :message, 6, "google.protobuf.Struct"
      repeated :children, :string, 7
    end
    add_enum "schema.v2.ImportBy" do
      value :github, 0
      value :notion, 1
      value :google_docs, 2
      value :figma, 3
    end
  end
end

module Schema
  module V2
    ProjectSource = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v2.ProjectSource").msgclass
    ProjectSource::Table = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v2.ProjectSource.Table").msgclass
    ProjectSource::Table::Column = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v2.ProjectSource.Table.Column").msgclass
    ProjectSource::Relation = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v2.ProjectSource.Relation").msgclass
    ProjectSource::Framework = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v2.ProjectSource.Framework").enummodule
    ProjectSource::Layer = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v2.ProjectSource.Layer").enummodule
    Git = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v2.Git").msgclass
    ProjectSourceCreation = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v2.ProjectSourceCreation").msgclass
    ProjectSourceCreation::Action = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v2.ProjectSourceCreation.Action").enummodule
    ERDConfig = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v2.ERDConfig").msgclass
    ERDConfig::Local = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v2.ERDConfig.Local").msgclass
    ERDConfig::Import = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v2.ERDConfig.Import").msgclass
    ERDConfig::TableChanged = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v2.ERDConfig.TableChanged").msgclass
    ERDConfig::TableChangedType = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v2.ERDConfig.TableChangedType").enummodule
    BusinessLogicChanges = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v2.BusinessLogicChanges").msgclass
    BlockDiff = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v2.BlockDiff").msgclass
    BlockDiff::Block = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v2.BlockDiff.Block").msgclass
    BlockDiff::Block::Addition = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v2.BlockDiff.Block.Addition").msgclass
    BlockDiff::Block::Modification = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v2.BlockDiff.Block.Modification").msgclass
    BlockDiff::Block::Deletion = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v2.BlockDiff.Block.Deletion").msgclass
    BlockDiff::BlockBody = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v2.BlockDiff.BlockBody").msgclass
    ApiChanges = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v2.ApiChanges").msgclass
    ProjectSourceReport = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v2.ProjectSourceReport").msgclass
    ProjectSourceReport::Progress = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v2.ProjectSourceReport.Progress").msgclass
    ProjectSourceReport::Error = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v2.ProjectSourceReport.Error").msgclass
    ProjectSourceReport::Complete = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v2.ProjectSourceReport.Complete").msgclass
    UseCaseRemoval = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v2.UseCaseRemoval").msgclass
    UseCaseRemoval::Block = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v2.UseCaseRemoval.Block").msgclass
    ImportBy = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v2.ImportBy").enummodule
  end
end
