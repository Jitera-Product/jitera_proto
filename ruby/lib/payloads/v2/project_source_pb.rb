# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: v2/project_source.proto

require 'google/protobuf'


descriptor_data = "\n\x17v2/project_source.proto\x12\tschema.v2\"\xa9\x05\n\rProjectSource\x12\x12\n\nproject_id\x18\x01 \x01(\x05\x12\x19\n\x11project_source_id\x18\x02 \x01(\x05\x12\x35\n\tframework\x18\x03 \x01(\x0e\x32\".schema.v2.ProjectSource.Framework\x12-\n\x05layer\x18\x04 \x01(\x0e\x32\x1e.schema.v2.ProjectSource.Layer\x12\x13\n\x0bsource_path\x18\x05 \x01(\t\x12\r\n\x05\x66iles\x18\x06 \x01(\t\x12\x33\n\x07\x63reated\x18\x07 \x01(\x0b\x32 .schema.v2.ProjectSource.CreatedH\x00\x12+\n\x03\x65rd\x18\x08 \x01(\x0b\x32\x1c.schema.v2.ProjectSource.ERDH\x00\x1a\t\n\x07\x43reated\x1a\x35\n\x03\x45RD\x12.\n\x06tables\x18\x01 \x03(\x0b\x32\x1e.schema.v2.ProjectSource.Table\x1aS\n\x05Table\x12\n\n\x02id\x18\x01 \x01(\x05\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x30\n\x07\x63olumns\x18\x03 \x03(\x0b\x32\x1f.schema.v2.ProjectSource.Column\x1a\"\n\x06\x43olumn\x12\n\n\x02id\x18\x01 \x01(\x05\x12\x0c\n\x04name\x18\x02 \x01(\t\"j\n\tFramework\x12\x19\n\x15\x46RAMEWORK_UNSPECIFIED\x10\x00\x12\n\n\x06NEXTJS\x10\x01\x12\x08\n\x04VITE\x10\x02\x12\n\n\x06NUXTJS\x10\x03\x12\n\n\x06NESTJS\x10\x04\x12\x07\n\x03ROR\x10\x05\x12\x0b\n\x07LARAVEL\x10\x06\"E\n\x05Layer\x12\x15\n\x11LAYER_UNSPECIFIED\x10\x00\x12\x0b\n\x07\x42\x41\x43KEND\x10\x01\x12\x0c\n\x08\x46RONTEND\x10\x02\x12\n\n\x06MOBILE\x10\x03\x42\x0f\n\rgenerate_type\"a\n\x11ProjectSourceSync\x12\x12\n\nproject_id\x18\x01 \x01(\x05\x12\x19\n\x11project_source_id\x18\x02 \x01(\x05\x12\x0e\n\x06status\x18\x03 \x01(\t\x12\r\n\x05\x66iles\x18\x04 \x01(\tb\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool

begin
  pool.add_serialized_file(descriptor_data)
rescue TypeError => e
  # Compatibility code: will be removed in the next major version.
  require 'google/protobuf/descriptor_pb'
  parsed = Google::Protobuf::FileDescriptorProto.decode(descriptor_data)
  parsed.clear_dependency
  serialized = parsed.class.encode(parsed)
  file = pool.add_serialized_file(serialized)
  warn "Warning: Protobuf detected an import path issue while loading generated file #{__FILE__}"
  imports = [
  ]
  imports.each do |type_name, expected_filename|
    import_file = pool.lookup(type_name).file_descriptor
    if import_file.name != expected_filename
      warn "- #{file.name} imports #{expected_filename}, but that import was loaded as #{import_file.name}"
    end
  end
  warn "Each proto file must use a consistent fully-qualified name."
  warn "This will become an error in the next major version."
end

module Schema
  module V2
    ProjectSource = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v2.ProjectSource").msgclass
    ProjectSource::Created = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v2.ProjectSource.Created").msgclass
    ProjectSource::ERD = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v2.ProjectSource.ERD").msgclass
    ProjectSource::Table = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v2.ProjectSource.Table").msgclass
    ProjectSource::Column = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v2.ProjectSource.Column").msgclass
    ProjectSource::Framework = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v2.ProjectSource.Framework").enummodule
    ProjectSource::Layer = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v2.ProjectSource.Layer").enummodule
    ProjectSourceSync = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v2.ProjectSourceSync").msgclass
  end
end
