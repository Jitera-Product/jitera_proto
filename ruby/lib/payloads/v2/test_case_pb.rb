# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: v2/test_case.proto

require 'google/protobuf'


descriptor_data = "\n\x12v2/test_case.proto\x12\tschema.v2\"\xc5\x03\n\x11TestCasesCreation\x12\x1b\n\x13project_generate_id\x18\x01 \x01(\x05\x12\x12\n\nproject_id\x18\x02 \x01(\x05\x12\x39\n\ntest_cases\x18\x03 \x03(\x0b\x32%.schema.v2.TestCasesCreation.TestCase\x12J\n\x12test_configuration\x18\x04 \x01(\x0b\x32..schema.v2.TestCasesCreation.TestConfiguration\x1a\x44\n\x11TestConfiguration\x12\x0b\n\x03url\x18\x01 \x01(\t\x12\x10\n\x08username\x18\x02 \x01(\t\x12\x10\n\x08password\x18\x03 \x01(\t\x1am\n\x08TestCase\x12\n\n\x02id\x18\x01 \x01(\x05\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\r\n\x05order\x18\x03 \x01(\x05\x12\x38\n\x05steps\x18\x04 \x03(\x0b\x32).schema.v2.TestCasesCreation.TestCaseStep\x1a\x43\n\x0cTestCaseStep\x12\x0f\n\x07node_id\x18\x01 \x01(\t\x12\r\n\x05order\x18\x02 \x01(\x05\x12\x13\n\x0b\x64\x65scription\x18\x03 \x01(\t\"\x9c\x02\n\x17TestCasesCreationReport\x12\x1b\n\x13project_generate_id\x18\x01 \x01(\x05\x12?\n\ntest_cases\x18\x03 \x03(\x0b\x32+.schema.v2.TestCasesCreationReport.TestCase\x12\x0e\n\x06\x65rrors\x18\x04 \x03(\t\x1a\x64\n\x08TestCase\x12\n\n\x02id\x18\x01 \x01(\x05\x12\x0c\n\x04\x63ode\x18\x02 \x01(\t\x12>\n\x05steps\x18\x03 \x03(\x0b\x32/.schema.v2.TestCasesCreationReport.TestCaseStep\x1a-\n\x0cTestCaseStep\x12\x0f\n\x07node_id\x18\x01 \x01(\t\x12\x0c\n\x04\x63ode\x18\x02 \x01(\tb\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool

begin
  pool.add_serialized_file(descriptor_data)
rescue TypeError => e
  # Compatibility code: will be removed in the next major version.
  require 'google/protobuf/descriptor_pb'
  parsed = Google::Protobuf::FileDescriptorProto.decode(descriptor_data)
  parsed.clear_dependency
  serialized = parsed.class.encode(parsed)
  file = pool.add_serialized_file(serialized)
  warn "Warning: Protobuf detected an import path issue while loading generated file #{__FILE__}"
  imports = [
  ]
  imports.each do |type_name, expected_filename|
    import_file = pool.lookup(type_name).file_descriptor
    if import_file.name != expected_filename
      warn "- #{file.name} imports #{expected_filename}, but that import was loaded as #{import_file.name}"
    end
  end
  warn "Each proto file must use a consistent fully-qualified name."
  warn "This will become an error in the next major version."
end

module Schema
  module V2
    TestCasesCreation = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v2.TestCasesCreation").msgclass
    TestCasesCreation::TestConfiguration = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v2.TestCasesCreation.TestConfiguration").msgclass
    TestCasesCreation::TestCase = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v2.TestCasesCreation.TestCase").msgclass
    TestCasesCreation::TestCaseStep = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v2.TestCasesCreation.TestCaseStep").msgclass
    TestCasesCreationReport = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v2.TestCasesCreationReport").msgclass
    TestCasesCreationReport::TestCase = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v2.TestCasesCreationReport.TestCase").msgclass
    TestCasesCreationReport::TestCaseStep = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("schema.v2.TestCasesCreationReport.TestCaseStep").msgclass
  end
end
